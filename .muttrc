set header_cache=/home/djm/Mail/.hcache
set pager_context=1
set pager_index_lines=6                 #show a mini-index in pager
set menu_scroll
#set pgp_verify_sig=no                   #dont show pgp in pager
set status_on_top                       #put status line at top
set sort=threads                        #sort by message threads in index

set editor="/usr/bin/vim -c \"set tw=72\""

set charset=UTF-8
set send_charset=UTF-8
#set file_charset="utf-8:iso-8859-1"
set file_charset="UTF-8"

set status_format=" %r %b %f %n      Del %d      Msgs %m %l %> (%P)"
set pager_format="%-10.10i %[!%a %b %d %R]"
set date_format="!%H:%M %a %d %b     "
set index_format="%4C %Z %[%b%d] %-15.15F %s"
set folder_format="%2C %t %8s %d %N %f"

#set sendmail="/usr/bin/msmtp"
set sendmail="/home/djm/local/bin/msmtp"

set use_from=yes
set from="REDACTED"
set realname="David Morgan"
set use_envelope_from=yes

set record="$HOME/Mail/sent"            #sent mail is saved here
set delete=yes                          #delete without prompting
set include=yes                #quote msg in reply
set fast_reply=yes            #no prompting on reply
set beep=no                #no noise
#set beep_new=yes
set markers=no                #no + on wrapped lines
set confirmappend=no            #no prompt for save to =keep
set to_chars=" +TCF"                    #no L for mail_list

#set folder = $HOME/Mail
set folder = /home/djm/Mail
mailboxes =spc
mailboxes =lfsbc
mailboxes =warwick
mailboxes =oxford
mailboxes =default
mailboxes =gods_minute
mailboxes =debian-testing-security-announce
mailboxes =gentoo-other
mailboxes =amazon
mailboxes =ebay
mailboxes =compsoc
mailboxes =debian-testing
mailboxes =debian-news
mailboxes =debian-user
mailboxes =london.pm
mailboxes =london.pm_jobs
mailboxes =pywm
mailboxes =freebsd-security
mailboxes =freebsd-python
mailboxes =freebsd-announce
mailboxes =freebsd-ports-announce
mailboxes =freebsd-current
mailboxes =freebsd-stable
mailboxes =freebsd-bugs
mailboxes =freebsd-ports-bugs
mailboxes =freebsd-ports
mailboxes =freebsd-hackers
mailboxes =freebsd-questions
mailboxes =freebsd-arch
mailboxes =freebsd-net
mailboxes =freebsd-emulation
mailboxes =freebsd-virtualization
mailboxes =freebsd-chromium
mailboxes =freebsd-default
mailboxes =redports
mailboxes =vbox-announce
mailboxes =vbox-dev
mailboxes =gentoo-dev
mailboxes =metal_leper
mailboxes =casimir_effect
mailboxes =oxlug
mailboxes =wolves-lug
mailboxes =soc
mailboxes =lispnyc
mailboxes =gentoo-bsd
mailboxes =gentoo-gwn
mailboxes =gentoo-forums
mailboxes =gentoo-desktop-research
mailboxes =gentoo-user
mailboxes =gentoo-announce
mailboxes =gentoo-security
mailboxes =gentoo-sparc
mailboxes =gentoo-portage-dev
mailboxes =gentoo-desktop
mailboxes =gentoo-desktop-research
mailboxes =gentoo-performance
mailboxes =rgrn
mailboxes =mplayer
mailboxes =vlc
mailboxes =xine
mailboxes =junk
mailboxes =keep
mailboxes =sent
mailboxes =gentoo-bugs
mailboxes =spam
mailboxes =usenet_spam
mailboxes =dns_reg_spam
mailboxes =gmail_spam
mailboxes =damaged

save-hook .* =keep/                     #default mbox to (s)ave mail is =keep
#subscribe gentoo-user gentoo-dev        #subscribed to these lists

bind pager h display-toggle-weed    #toggle headers with h key

# simulate the old url menu
macro index \cb |urlview\n 'call urlview to extract URLs out of a message'
macro pager \cb |urlview\n 'call urlview to extract URLs out of a message'

#run fetchmail by hitting key of G
macro index G "!/home/djm/bin/getmail.sh\r"
macro pager G "!/home/djm/bin/getmail.sh\r"

#use to edit .muttrc and then source it...no restart necessary
macro generic ,sm ":source $HOME/.muttrc\r"

# default list of header fields to weed out when displaying mail
#ignore them all and then unignore what you want to see
ignore *
unignore  Date To From Subject X-Mailer Organization User-Agent CC
hdr_order Date From To Subject X-Mailer User-Agent Organization

##your Mutt has to have some colors
##these are for four levels of quoted text
##they override the system settings in /etc/mutt/Muttrc

#color quoted green  default
#color quoted1 magenta blue
#color quoted2 yellow default
#color quoted3 red default
#color signature cyan cyan


#this color setup is copied from /etc/mutt/Muttrc.color
#comment it out if you want the default colors in /etc/mutt/Muttrc
# Je vois la vie en rose :-)
#color    hdrdefault    brightcyan    blue
#color    header        brightwhite    blue "^from:"
#color   header          brightwhite        blue   "^subject:"

#color   quoted          brightgreen     blue
#color   signature       brightwhite    blue

#color   indicator       blue            green

#color   error           red             black
#mono    error           bold
#color   status          black cyan
#mono    status        bold
#color   tree            yellow       blue

#color   tilde           brightmagenta   blue
#color    body    brightwhite        blue    "[-a-z_0-9.]+@[-a-z_0-9.]+"
#mono    body    bold                    "[-a-z_0-9.]+@[-a-z_0-9.]+"
#color   body            brightyellow    black   "^Good signature"
#mono    body            bold                    "^Good signature"
#color   body            brightwhite     red     "^Bad signature from.*"
#mono    body            bold                    "^Bad signature from.*"
#color   normal          white        blue
#color    message        green    black
#color    attachment    brightgreen    blue

# -*-muttrc-*-
#
# Command formats for gpg.
#
# This version uses gpg-2comp from
#   http://muppet.faveve.uni-stuttgart.de/~gero/gpg-2comp.tar.gz
#
# $Id: muttrc-gpg,v 1.4 2003/12/10 15:33:00 agriffis Exp $
#
# %p    The empty string when no passphrase is needed,
#       the string "PGPPASSFD=0" if one is needed.
#
#       This is mostly used in conditional % sequences.
#
# %f    Most PGP commands operate on a single file or a file
#       containing a message.  %f expands to this file's name.
#
# %s    When verifying signatures, there is another temporary file
#       containing the detached signature.  %s expands to this
#       file's name.
#
# %a    In "signing" contexts, this expands to the value of the
#       configuration variable $pgp_sign_as.  You probably need to
#       use this within a conditional % sequence.
#
# %r    In many contexts, mutt passes key IDs to pgp.  %r expands to
#       a list of key IDs.

# Note that we explicitly set the comment armor header since GnuPG, when used
# in some localiaztion environments, generates 8bit data in that header, thereby
# breaking PGP/MIME.

# decode application/pgp
set pgp_decode_command="/usr/bin/gpg  --charset utf-8   %?p?--passphrase-fd 0? --no-verbose --quiet  --batch  --output - %f"

# verify a pgp/mime signature
set pgp_verify_command="/usr/bin/gpg   --keyserver pgpkeys.mit.edu --keyserver-options honor-http-proxy --no-verbose --quiet  --batch  --output - --verify %s %f"

# decrypt a pgp/mime attachment
set pgp_decrypt_command="/usr/bin/gpg   --passphrase-fd 0 --no-verbose --quiet  --batch  --output - %f"

# create a pgp/mime signed attachment
# set pgp_sign_command="/usr/bin/gpg-2comp --comment '' --no-verbose --batch  --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"
set pgp_sign_command="/usr/bin/gpg    --no-verbose --batch --quiet   --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"

# create a application/pgp signed (old-style) message
# set pgp_clearsign_command="/usr/bin/gpg-2comp --comment ''  --no-verbose --batch  --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"
set pgp_clearsign_command="/usr/bin/gpg   --charset utf-8 --no-verbose --batch --quiet   --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"

# create a pgp/mime encrypted attachment
# set pgp_encrypt_only_command="pgpewrap gpg-2comp  -v --batch  --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"
set pgp_encrypt_only_command="pgpewrap /usr/bin/gpg  --charset utf-8    --batch  --quiet  --no-verbose --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"

# create a pgp/mime encrypted and signed attachment
# set pgp_encrypt_sign_command="pgpewrap gpg-2comp  --passphrase-fd 0 -v --batch  --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"
set pgp_encrypt_sign_command="pgpewrap /usr/bin/gpg  --charset utf-8 --passphrase-fd 0  --batch --quiet  --no-verbose  --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"

# import a key into the public key ring
set pgp_import_command="/usr/bin/gpg  --no-verbose --import -v %f"

# export a key from the public key ring
set pgp_export_command="/usr/bin/gpg   --no-verbose --export --armor %r"

# verify a key
set pgp_verify_key_command="/usr/bin/gpg   --verbose --batch  --fingerprint --check-sigs %r"

# read in the public key ring
set pgp_list_pubring_command="/usr/bin/gpg   --no-verbose --batch --quiet   --with-colons --list-keys %r"

# read in the secret key ring
set pgp_list_secring_command="/usr/bin/gpg   --no-verbose --batch --quiet   --with-colons --list-secret-keys %r"

# fetch keys
# set pgp_getkeys_command="pkspxycwrap %r"

# pattern for good signature - may need to be adapted to locale!

# set pgp_good_sign="^gpg: Good signature from"

# OK, here's a version which uses gnupg's message catalog:
set pgp_good_sign="`gettext -d gnupg -s 'Good signature from "' | tr -d '"'`"

# End of file...but it can go on and on and on....:)
#
#

# spamassassin report and classify:

macro index X1 "|/usr/bin/pyzor report"
macro index X2 "|/usr/bin/razor-report"
macro index H "|/usr/bin/sa-learn --ham  --no-sync"
macro index S "|/usr/bin/sa-learn --spam  --no-sync"
macro index U "!/usr/bin/sa-learn --sync"
macro pager X1 "|/usr/bin/pyzor report"
macro pager X2 "|/usr/bin/razor-report"
macro pager H "|/usr/bin/sa-learn --ham  --no-sync"
macro pager S "|/usr/bin/sa-learn --spam  --no-sync"
macro pager U "!/usr/bin/sa-learn --sync"

## sidebar stuff
#set sidebar_visible=yes
#set sidebar_width=10
#color sidebar_new yellow default
#bind index \CP sidebar-prev
#bind index \CN sidebar-next
#bind index \CO sidebar-open
#bind pager \CP sidebar-prev
#bind pager \CN sidebar-next
#bind pager \CO sidebar-open

#macro index c "<change-folder>?<toggle-milboxes>" "list mailboxes and change"
#macro pager c "<change-folder>?<toggle-milboxes>" "list mailboxes and change"
#
charset-hook windows-1250 CP1250
charset-hook windows-1251 CP1251
charset-hook windows-1252 CP1252
charset-hook windows-1253 CP1253
charset-hook windows-1254 CP1254
charset-hook windows-1255 CP1255
charset-hook windows-1256 CP1256
charset-hook windows-1257 CP1257
charset-hook windows-1258 CP1258

#set implicit_autoview
alternative_order text/plain text/enriched text/html

#color index yellow default ~v

#set mime_forward=yes
#set mime_forward_rest=yes

set sidebar_visible=no

macro pager I "<change-newsgroup>"
macro index I "<change-newsgroup>"
macro attach I "<change-newsgroup>"

macro pager i "<exit>"
#macro index i "<exit>"
macro index i ":set sidebar_visible=no\n"
macro attach i ":set sidebar_visible=no\n"

