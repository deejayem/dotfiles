;;; non-modo-theme.el --- Custom face theme for Emacs -*- lexical-binding: t -*-
;;; Commentary:
;; A very heavily modified version of modus-vivendi, based on the code from
;; https://git.sr.ht/~protesilaos/modus-themes/tree/18dd2457d233859ad4d102d797d6744525177ac4/item/modus-themes.el

;; The initial set of modifications are as follows:
;; (custom-set-faces
;;  `(font-lock-builtin-face ((t (:foreground "LawnGreen"))))
;;  `(font-lock-keyword-face ((t (:foreground "gold"))))
;;  `(font-lock-function-name-face ((t (:foreground "cyan"))))
;;  `(font-lock-variable-name-face ((t (:foreground "gold3"))))
;;  `(font-lock-constant-face ((t (:foreground "DeepSkyBlue2"))))
;;  `(font-lock-type-face ((t (:foreground "PaleGreen2"))))
;;  `(font-lock-string-face ((t (:foreground "SpringGreen3"))))
;;  `(font-lock-comment-face ((t (:foreground "burlywood"))))
;;  `(font-lock-doc-face ((t :foreground "LightCyan3")))
;;  `(region ((t (:background "firebrick"))))
;;  `(secondary-selection ((t (:background "firebrick4"))))
;;  `(highlight ((t (:background "grey30"))))
;;  `(idle-highlight ((t (:background "grey50" :foreground "white"))))
;;  `(isearch ((t (:background "coral2"))))
;;  `(lazy-highlight ((t (:background "LightSteelBlue2" :foreground "black"))))
;;  `(match ((t (:background "gray35" :foreground "grey85"))))
;;  `(lsp-face-highlight-textual ((t (:background "DimGrey"))))
;;  `(whitespace-empty ((t (:background "gray10"))))
;;  `(hl-line ((t :background "gray20" :underline "gray40" :inherit nil)))
;;  `(simple-modeline-status-modified ((t :foreground "DeepSkyBlue")))
;;  `(consult-async-split ((t :foreground "LightCoral")))
;;  `(orderless-match-face-0 ((t :foreground "tomato")))
;;  `(orderless-match-face-1 ((t :foreground "SpringGreen2")))
;;  `(orderless-match-face-2 ((t :foreground "gold")))
;;  `(orderless-match-face-3 ((t :foreground "DeepSkyBlue2")))
;;  `(flycheck-fringe-warning ((t :foreground "white" :background "gold3")))
;;  `(flycheck-fringe-error ((t :foreground "white" :background "red2")))
;;  `(flycheck-fringe-info ((t :foreground "white" :background "RoyalBlue3")))
;;  `(anzu-mode-line ((,class :inherit bold :foreground "yellow")))
;;  `(cider-debug-code-overlay-face ((t :background "gray45")))
;;  ;; Recommended for cider-inspector-mode
;;  `(alt-font-lock-keyword-face ((t :foreground "LightSkyBlue" :weight bold)))
;;  ;; Recommended for magit-mode
;;  `(alt-hl-line-face ((t :underline "gray50" :weight bold)))
;;  ;; this is the default, but for some reason modus-themes started overriding it
;;  `(clojure-keyword-face ((t :inherit font-lock-constant-face))))

;; The basic procedure for creating this file was copying parts of `modus-themes.el', removing faces that weren't
;; interesting to me, and then "inlining" everything - i.e. replacing variables and every `:inherit modus-themes-*'
;; with the correct values, then applying the changing above. This was based on modus-vivendi from modus-themes v3
;; with the following configuration:
;; (setq modus-themes-syntax '(green-strings yellow-comments)
;;       modus-themes-paren-match '(bold intense underline)
;;       modus-themes-bold-constructs t
;;       modus-themes-italic-constructs t
;;       modus-themes-lang-checkers '(text-also))

;; Further changes (both custom and from later modus-themes versions) have been made since.

;; The goal was to create something more visually appealing to me (especially with regards to font lock faces),
;; and to make certain things more noticeable (e.g. `cider-debug-code-overlay-face').

;;; Code:

(deftheme non-modo
  "Heavily modified version of modus-vivendi.")

(let ((class '((class color) (min-colors 89))))
  (custom-theme-set-faces
   'non-modo
;;;; standard faces
;;;;; absolute essentials
   `(default ((,class :foreground "#ffffff" :background "#000000")))
   `(cursor ((,class :background "#ffffff")))
   `(fringe ((,class :foreground "#ffffff" :background "#1e1e1e")))
   `(vertical-border ((,class :foreground "#646464")))
;;;;; basic and/or ungrouped styles
   `(bold ((,class :weight bold)))
   `(bold-italic ((,class :inherit (bold italic))))
   `(underline ((,class :underline "#a8a8a8")))
   `(buffer-menu-buffer ((,class :inherit bold)))
   `(child-frame-border ((,class :background "#646464")))
   `(comint-highlight-input ((,class :inherit bold)))
   `(comint-highlight-prompt ((,class :foreground "#6ae4b9")))
   `(confusingly-reordered ((,class :foreground "#ef8690" :underline (:color "#ff4a6f" :style wave))))
   `(edmacro-label ((,class :inherit bold :foreground "#00d3d0")))
   `(elisp-shorthand-font-lock-face ((,class :foreground "gold3")))
   `(error ((,class :inherit bold :foreground "#ff8059") ))
   `(escape-glyph ((,class :foreground "#e7a59a")))
   `(file-name-shadow ((,class :inherit shadow)))
   `(header-line ((,class :background "#212121" :foreground "#dddddd")))
   `(header-line-highlight ((,class :inherit highlight)))
   `(help-argument-name ((,class :inherit italic :foreground "#00d3d0")))
   `(help-key-binding ((,class :inherit bold :foreground "#00bcff")))
   `(homoglyph ((,class :foreground "#f5aa80")))
   `(ibuffer-locked-buffer ((,class :foreground "#d0ba95")))
   `(icon-button ((,class :background "#323232" :box (:line-width -1 :style released-button :color "#3c3c3c"))))
   `(italic ((,class :slant italic)))
   `(nobreak-hyphen ((,class :foreground "#e7a59a")))
   `(nobreak-space ((,class :foreground "#e7a59a" :underline t)))
   `(menu ((,class :inverse-video unspecified :foreground "#ffffff" :background "#323232")))
   `(minibuffer-prompt ((,class :foreground "SpringGreen2")))
   `(mm-command-output ((,class :foreground "#ff9077")))
   `(mm-uu-extract ((,class :background "#100f10" :foreground "#bfebe0")))
   `(next-error ((,class :background "#762422" :foreground "#e0e6f0" :extend t)))
   `(pgtk-im-0 ((,class :background "#004065" :foreground "#8ae4f2")))
   `(read-multiple-choice-face ((,class :inherit bold :background "#3f2210" :foreground "#f0aa20")))
   `(rectangle-preview ((,class :background "#382f27" :foreground "#f8dec0")))
   `(region ((,class :background "firebrick" :foreground "#ffffff" :extend t)))
   `(secondary-selection ((,class :background "firebrick4" :foreground "#c6eaff" :extend t)))
   `(separator-line ((,class :underline "#3c3c3c")))
   `(shadow ((,class :foreground "#a8a8a8")))
   `(success ((,class :inherit bold :foreground  "#44bc44")))
   `(trailing-whitespace ((,class :background "#a4202a")))
   `(warning ((,class :inherit bold :foreground "#d0bc00")))
;;;;; buttons, links, widgets
   `(button ((,class :foreground "#00bcff" :underline t)))
   `(link ((,class :inherit button)))
   `(link-visited ((,class :inherit button :foreground "#b6a0ff" :underline t)))
   `(tooltip ((,class :background "#203448" :foreground "#ffffff")))
   `(widget-button ((,class :inherit bold :foreground "#79a8ff")))
   `(widget-button-pressed ((,class :inherit bold :foreground "f78fe7")))
   `(widget-documentation ((,class :foreground "#44bc44")))
   `(widget-field ((,class :background "#191a1b" :foreground "#ffffff" :extend nil)))
   `(widget-inactive ((,class :inherit shadow :background "#100f10")))
   `(widget-single-line-field ((,class :inherit widget-field)))
;;;;; ansi-color
   `(ansi-color-black ((,class :background "black" :foreground "black")))
   `(ansi-color-blue ((,class :background "#2fafff" :foreground "#2fafff")))
   `(ansi-color-bold ((,class :inherit bold)))
   `(ansi-color-bright-black ((,class :background "gray35" :foreground "gray35")))
   `(ansi-color-bright-blue ((,class :background "#79a8ff" :foreground "#79a8ff")))
   `(ansi-color-bright-cyan ((,class :background "#6ae4b9" :foreground "#6ae4b9")))
   `(ansi-color-bright-green ((,class :background "#00c06f" :foreground "#00c06f")))
   `(ansi-color-bright-magenta ((,class :background "#b6a0ff" :foreground "#b6a0ff")))
   `(ansi-color-bright-red ((,class :background "#ef8b50" :foreground "#ef8b50")))
   `(ansi-color-bright-white ((,class :background "white" :foreground "white")))
   `(ansi-color-bright-yellow ((,class :background "#c0c530" :foreground "#c0c530")))
   `(ansi-color-cyan ((,class :background "#00d3d0" :foreground "#00d3d0")))
   `(ansi-color-green ((,class :background "#44bc44" :foreground "#44bc44")))
   `(ansi-color-magenta ((,class :background "#feacd0" :foreground "#feacd0")))
   `(ansi-color-red ((,class :background "#ff8059" :foreground "#ff8059") ))
   `(ansi-color-white ((,class :background "gray65" :foreground "gray65")))
   `(ansi-color-yellow ((,class :background "#d0bc00" :foreground "#d0bc00")))
;;;;; anzu
   `(anzu-match-1 ((,class :background "#00415e" :foreground "#e0e6f0")))
   `(anzu-match-2 ((,class :background "#874900" :foreground "#ffffff")))
   `(anzu-match-3 ((,class :background "#604200" :foreground "#e0e6f0")))
   `(anzu-mode-line ((,class :inherit bold :foreground "yellow")))
   `(anzu-mode-line-no-match ((,class :inherit bold :foreground "#ffa7ba")))
   `(anzu-replace-highlight ((,class :background "#77002a" :foreground "#ffb9ab" :underline t)))
   `(anzu-replace-to ((,class :background "#874900" :foreground "#ffffff")))
;;;;; apropos
   `(apropos-button ((,class :foreground "#b6a0ff")))
   `(apropos-function-button ((,class :foreground "#feacd0")))
   `(apropos-keybinding ((,class :inherit bold :foreground "#00bcff")))
   `(apropos-misc-button ((,class :foreground "#00c06f")))
   `(apropos-property ((,class :inherit bold :foreground "#f78fe7")))
   `(apropos-symbol ((,class :inherit bold :foreground "#ffffff")))
   `(apropos-user-option-button ((,class :foreground "#00d3d0")))
   `(apropos-variable-button ((,class :foreground "#79a8ff")))
;;;;; artbollocks-mode
   `(artbollocks-face ((,class :forefound "#9d9def" :underline (:color "#5f6fff" :style wave))))
   `(artbollocks-lexical-illusions-face ((,class :background "#191a1b" :foreground "#ef8b50" :underline t)))
   `(artbollocks-passive-voice-face ((,class :foreground "#b0aa00" :underline (:color "#d0bc00" :style wave))))
   `(artbollocks-weasel-words-face ((,class :foreground "#ef8690" :underline (:color "#ff4a6f" :style wave))))
;;;;; auctex and Tex
   `(font-latex-bold-face ((,class :inherit bold)))
   `(font-latex-doctex-documentation-face ((,class :inherit font-lock-doc-face)))
   `(font-latex-doctex-preprocessor-face ((,class :inherit font-lock-preprocessor-face)))
   `(font-latex-italic-face ((,class :inherit italic)))
   `(font-latex-math-face ((,class :inherit font-lock-constant-face)))
   `(font-latex-script-char-face ((,class :inherit font-lock-builtin-face)))
   `(font-latex-sectioning-5-face ((,class :inherit bold :foreground "#bfd9ff")))
   `(font-latex-sedate-face ((,class :inherit font-lock-keyword-face)))
   `(font-latex-slide-title-face ((,class :inherit bold :foreground "#ffffff")))
   `(font-latex-string-face ((,class :inherit font-lock-string-face)))
   `(font-latex-subscript-face ((,class :height 0.95)))
   `(font-latex-superscript-face ((,class :height 0.95)))
   `(font-latex-underline-face ((,class :inherit underline)))
   `(font-latex-verbatim-face ((,class :foreground "#f78fe7")))
   `(font-latex-warning-face ((,class :inherit font-lock-warning-face)))
   `(tex-verbatim ((,class :foreground "#f78fe7")))
   `(texinfo-heading ((,class :foreground "#feacd0")))
   `(TeX-error-description-error ((,class :inherit error)))
   `(TeX-error-description-help ((,class :inherit success)))
   `(TeX-error-description-tex-said ((,class :inherit success)))
   `(TeX-error-description-warning ((,class :inherit warning)))
;;;;; avy
   `(avy-background-face ((,class :background "#100f10" :foreground "#e0e6f0" :extend t)))
   `(avy-goto-char-timer-face ((,class :inherit bold :background "#323232" :foreground "#ffffff")))
   `(avy-lead-face ((,class :inherit bold :background "#0050af" :slant normal :foreground "#ffffff" :underline nil :overline nil :strike-through nil :box nil :extend nil)))
   `(avy-lead-face-0 ((,class :inherit bold :background "#7f1f7f" :slant normal :foreground "#ffffff" :underline nil :overline nil :strike-through nil :box nil :extend nil)))
   `(avy-lead-face-1 ((,class :foreground "#f8dec0" :background "#382f27" :weight normal :slant normal :underline nil :overline nil :strike-through nil :box nil :extend nil)))
   `(avy-lead-face-2 ((,class :inherit bold :background "#625a00" :slant normal :foreground "#ffffff" :underline nil :overline nil :strike-through nil :box nil :extend nil)))
;;;;; aw (ace-window)
   `(aw-background-face ((,class :foreground "#93959b")))
   `(aw-key-face ((,class :inherit bold :foreground "#00bcff")))
   `(aw-leading-char-face ((,class :inherit bold :height 1.5 :foreground "red" :slant normal :underline nil :overline nil :strike-through nil :box nil :extend nil)))
   `(aw-minibuffer-leading-char-face ((,class :inherit bold :background "#a4202a" :foreground "#ffffff")))
   `(aw-mode-line-face ((,class :inherit bold)))
;;;;; bookmark
   `(bookmark-face ((,class :inherit :background "#004f8f" :foreground "#ffffff")))
   `(bookmark-menu-bookmark ((,class :inherit bold)))
;;;;; breakpoint (built-in gdb-mi.el)
   `(breakpoint-disabled ((,class :inherit shadow)))
   `(breakpoint-enabled ((,class :inherit bold :foreground "#ff8059") ))
;;;;; calendar and diary
   `(calendar-month-header ((,class :inherit bold :foreground "#ffffff")))
   `(calendar-today ((,class :inherit bold :underline t)))
   `(calendar-weekday-header ((,class :foreground "#93959b")))
   `(calendar-weekend-header ((,class :foreground "#ffa0a0")))
   `(diary ((,class :background "#0f0e39" :foreground "#00bcff")))
   `(diary-anniversary ((,class :foreground "#ff9077")))
   `(diary-time ((,class :foreground "#00d3d0")))
   `(holiday ((,class :background "#230631" :foreground "#f78fe7")))
;;;;; change-log and log-view (`vc-print-log' and `vc-print-root-log')
   `(change-log-acknowledgment ((,class :inherit shadow)))
   `(change-log-conditionals ((,class :foreground "#d0bc00")))
   `(change-log-date ((,class :foreground "#00d3d0")))
   `(change-log-email ((,class :foreground "#6ae4b9")))
   `(change-log-file ((,class :inherit bold :foreground "#c6eaff")))
   `(change-log-function ((,class :foreground "#00c06f")))
   `(change-log-list ((,class :foreground "#f78fe7")))
   `(change-log-name ((,class :foreground "#b6a0ff")))
   `(log-edit-header ((,class :foreground "#f8dec0")))
   `(log-edit-headers-separator ((,class :height 1 :background "#646464" :extend t)))
   `(log-edit-summary ((,class :inherit bold :foreground "#2fafff")))
   `(log-edit-unknown-header ((,class :inherit shadow)))
   `(log-view-commit-body ((,class :foreground "#bfd9ff")))
   `(log-view-file ((,class :inherit bold :foreground "#c6eaff")))
   `(log-view-message ((,class :background "#191a1b" :foreground "#a8a8a8")))
;;;;; cider
   `(cider-debug-code-overlay-face ((,class :background "gray45")))
   `(cider-debug-prompt-face ((,class :foreground "#f78fe7" :underline t)))
   `(cider-deprecated-face ((,class :background "#693200" :foreground "#e2d980")))
   `(cider-docview-emphasis-face ((,class :inherit italic :foreground "#c6eaff")))
   `(cider-docview-literal-face ((,class :foreground "#79a8ff")))
   `(cider-docview-strong-face ((,class :inherit bold :foreground "#c6eaff")))
   `(cider-docview-table-border-face ((,class :inherit shadow)))
   `(cider-enlightened-face ((,class :box (:line-width -1 :color "#c0c530" :style nil) :background "#100f10")))
   `(cider-enlightened-local-face ((,class :inherit bold :foreground "#d3b55f")))
   `(cider-error-highlight-face ((,class :foreground "#ff8059" :underline t)))
   `(cider-fragile-button-face ((,class :box (:line-width 3 :color "#a8a8a8" :style released-button) :foreground "#d0bc00")))
   `(cider-fringe-good-face ((,class :foreground "#70d73f")))
   `(cider-instrumented-face ((,class :box (:line-width -1 :color "#ff8059" :style nil) :background "#100f10")))
   `(cider-reader-conditional-face ((,class :inherit italic :foreground "#f8dec0")))
   `(cider-repl-input-face ((,class :inherit bold)))
   `(cider-repl-prompt-face ((,class :foreground "green3")))
   `(cider-repl-stderr-face ((,class :inherit bold :foreground "#ff8059") ))
   `(cider-repl-stdout-face ((,class :foreground "white")))
   `(cider-result-overlay-face ((,class :box (:line-width -1 :color "#2fafff" :style nil) :background "#100f10")))
   `(cider-stacktrace-error-class-face ((,class :inherit bold :foreground "#ff8059") ))
   `(cider-stacktrace-error-message-face ((,class :inherit italic :foreground "#ff9077")))
   `(cider-stacktrace-face ((,class :foreground "#ffffff")))
   `(cider-stacktrace-filter-active-face ((,class :foreground "#4ae2f0" :underline t)))
   `(cider-stacktrace-filter-inactive-face ((,class :foreground "#4ae2f0")))
   `(cider-stacktrace-fn-face ((,class :inherit bold :foreground "#ffffff")))
   `(cider-stacktrace-ns-face ((,class :inherit (shadow italic))))
   `(cider-stacktrace-promoted-button-face ((,class :box (:line-width 3 :color "#a8a8a8" :style released-button) :foreground "#ff8059") ))
   `(cider-stacktrace-suppressed-button-face ((,class :box (:line-width 3 :color "#a8a8a8" :style pressed-button) :background "#191a1b" :foreground "#a8a8a8")))
   `(cider-test-error-face ((,class :background "#762422" :foreground "#e0e6f0")))
   `(cider-test-failure-face ((,class :inherit bold :background "#a4202a" :foreground "#ffffff")))
   `(cider-test-success-face ((,class :background "#006800" :foreground "#ffffff")))
   `(cider-traced-face ((,class :box (:line-width -1 :color "#00d3d0" :style nil) :background "#100f10")))
   `(cider-warning-highlight-face ((,class :foreground "#d0bc00" :underline t)))
;;;;; clojure-mode
   `(clojure-keyword-face ((,class :inherit font-lock-constant-face)))
;;;;; compilation
   `(compilation-column-number ((,class :inherit compilation-line-number)))
   `(compilation-error ((,class :inherit bold :foreground "#ff8059") ))
   `(compilation-info ((,class :inherit bold :foreground "#c6eaff")))
   `(compilation-line-number ((,class :foreground "#f8dec0")))
   `(compilation-mode-line-exit ((,class :inherit bold)))
   `(compilation-mode-line-fail ((,class :inherit bold :foreground "#ffa7ba")))
   `(compilation-mode-line-run ((,class :inherit bold :foreground "#00d8b4")))
   `(compilation-warning ((,class :inherit bold :foreground "#c0c530")))
;;;;; completions
   `(completions-annotations ((,class :inherit italic :foreground "#90c4ed")))
   `(completions-common-part ((,class :inherit bold :foreground "#f78fe7")))
   `(completions-first-difference ((,class :inherit bold :foreground "#2fafff")))
;;;;; consult
   `(consult-async-running ((,class :inherit bold :foreground "#2fafff")))
   `(consult-async-split ((,class :foreground "LightCoral")))
   `(consult-bookmark ((,class :foreground "#2fafff")))
   `(consult-file ((,class :inherit bold :foreground "#c6eaff")))
   `(consult-imenu-prefix ((,class :inherit shadow)))
   `(consult-key ((,class :inherit bold :foreground "#00bcff")))
   `(consult-line-number ((,class :foreground "#f8dec0")))
   `(consult-line-number-prefix ((,class :foreground "#93959b")))
   `(consult-narrow-indicator ((,class :foreground "gold")))
   `(consult-preview-cursor ((,class :background "#2a40b8" :foreground "#ffffff")))
   `(consult-preview-insertion ((,class :background "#382f27" :foreground "#f8dec0")))
;;;;; corfu
   `(corfu-current ((,class :inherit bold :background "#3c3c3c")))
   `(corfu-bar ((,class :background "#a8a8a8")))
   `(corfu-border ((,class :background "#323232")))
   `(corfu-default ((,class :background "#191a1b")))
;;;;; corfu-quick
   `(corfu-quick1 ((,class :inherit bold :background "#0050af")))
   `(corfu-quick2 ((,class :inherit bold :background "#7f1f7f")))
;;;;; corfu-candidate-overlay
   `(corfu-candidate-overlay-face ((t :inherit shadow)))
;;;;; cov
   `(cov-coverage-not-run-face ((,class :foreground "red")))
   `(cov-coverage-run-face ((,class :foreground "#4fe42f")))
   `(cov-heavy-face ((,class :foreground "#ff62d4")))
   `(cov-light-face ((,class :foreground "#4fafff")))
   `(cov-med-face ((,class :foreground "#f0dd60")))
   `(cov-none-face ((,class :foreground "#3fdfd0")))
;;;;; cperl-mode
   `(cperl-nonoverridable-face ((,class :foreground unspecified)))
   `(cperl-array-face ((,class :inherit font-lock-keyword-face)))
   `(cperl-hash-face ((,class :inherit font-lock-variable-name-face)))
;;;;; crontab-mode
   `(crontab-minute ((,class :foreground "#79a8ff")))
   `(crontab-hour ((,class :foreground "#b6a0ff")))
   `(crontab-month-day ((,class :foreground "#f78fe7")))
   `(crontab-month ((,class :foreground "#2fafff")))
   `(crontab-week-day ((,class :foreground "#00d3d0")))
   `(crontab-predefined ((,class :foreground "#79a8ff")))
;;;;; css-mode
   `(css-property ((,class :inherit font-lock-type-face)))
   `(css-selector ((,class :inherit font-lock-keyword-face)))
;;;;; csv-mode
   `(csv-separator-face ((,class :foreground "red")))
;;;;; custom (M-x customize)
   `(custom-button ((,class :background "#323232" :box (:line-width -1 :style released-button :color "#3c3c3c"))))
   `(custom-button-mouse ((,class :inherit (highlight custom-button))))
   `(custom-button-pressed ((,class :background "#323232" :box (:line-width -1 :style pressed-button :color "#3c3c3c"))))
   `(custom-changed ((,class :background "#00415e" :foreground "#e0e6f0")))
   `(custom-comment ((,class :inherit shadow)))
   `(custom-comment-tag ((,class :background "#191a1b" :foreground "#d3b55f")))
   `(custom-face-tag ((,class :inherit bold :foreground "#4fafff")))
   `(custom-group-tag ((,class :inherit bold :foreground "#f78fe7")))
   `(custom-group-tag-1 ((,class :background "#382f27" :foreground "#f8dec0")))
   `(custom-invalid ((,class :inherit bold :background "#a4202a" :foreground "#ffffff")))
   `(custom-modified ((,class :background "#00415e" :foreground "#e0e6f0")))
   `(custom-rogue ((,class :background "#71206a" :foreground "#ffcaf0")))
   `(custom-set ((,class :foreground "#79a8ff")))
   `(custom-state ((,class :foreground "#f5aa80")))
   `(custom-themed ((,class :background "#10387c" :foreground "#e0e6f0")))
   `(custom-variable-obsolete ((,class :inherit shadow)))
   `(custom-variable-tag ((,class :foreground "#00d3d0")))
;;;;; dap-mode
   `(dap-mouse-eval-thing-face ((,class :box (:line-width -1 :color "#34cfff" :style nil) :background "#323232" :foreground "#ffffff")))
   `(dap-result-overlay-face ((,class :box (:line-width -1 :color "#323232" :style nil) :background "#323232" :foreground "#ffffff")))
   `(dap-ui-breakpoint-verified-fringe ((,class :inherit bold :foreground "#70d73f")))
   `(dap-ui-compile-errline ((,class :inherit bold :foreground "red")))
   `(dap-ui-locals-scope-face ((,class :inherit bold :foreground "#feacd0" :underline t)))
   `(dap-ui-locals-variable-face ((,class :inherit bold :foreground "#00d3d0")))
   `(dap-ui-locals-variable-leaf-face ((,class :inherit italic :foreground "#6ae4b9")))
   `(dap-ui-marker-face ((,class :background "#10387c" :foreground "#e0e6f0")))
   `(dap-ui-sessions-stack-frame-face ((,class :inherit bold :foreground "#f78fe7")))
   `(dap-ui-sessions-terminated-active-face ((,class :inherit bold :foreground "#a8a8a8")))
   `(dap-ui-sessions-terminated-face ((,class :inherit shadow)))
;;;;; deadgrep
   `(deadgrep-filename-face ((,class :inherit bold :foreground "#c6eaff")))
   `(deadgrep-match-face ((,class :background "#392a48" :foreground "#fbd6f4")))
   `(deadgrep-meta-face ((,class :inherit shadow)))
   `(deadgrep-regexp-metachar-face ((,class :inherit bold :foreground "#f0dd60")))
   `(deadgrep-search-term-face ((,class :inherit bold :foreground "#4fe42f")))
;;;;; debbugs
   `(debbugs-gnu-archived ((,class :inverse-video t)))
   `(debbugs-gnu-done ((,class :inherit shadow)))
   `(debbugs-gnu-forwarded ((,class :foreground "#f8dec0")))
   `(debbugs-gnu-handled ((,class :foreground "#2fafff")))
   `(debbugs-gnu-new ((,class :foreground "#ff8059") ))
   `(debbugs-gnu-pending ((,class :foreground "#00d3d0")))
   `(debbugs-gnu-stale-1 ((,class :foreground "#dfdfb0")))
   `(debbugs-gnu-stale-2 ((,class :foreground "#d0bc00")))
   `(debbugs-gnu-stale-3 ((,class :foreground "#c0c530")))
   `(debbugs-gnu-stale-4 ((,class :foreground "#d3b55f")))
   `(debbugs-gnu-stale-5 ((,class :foreground "#ef8b50")))
   `(debbugs-gnu-tagged ((,class :foreground "#f78fe7")))
;;;;; dictionary
   `(dictionary-button-face ((,class :inherit bold :foreground "#c6eaff")))
   `(dictionary-reference-face ((,class :inherit button)))
   `(dictionary-word-definition-face (()))
   `(dictionary-word-entry-face ((,class :inherit font-lock-comment-face)))
;;;;; diff-hl
   `(diff-hl-change ((,class :background "#6f4f00" :foreground "#ffffff")))
   `(diff-hl-delete ((,class :background "#8f1f4b" :foreground "#ffffff")))
   `(diff-hl-insert ((,class :background "#006700" :foreground "#ffffff")))
   `(diff-hl-reverted-hunk-highlight ((,class :background "#ffffff" :foreground "#000000")))
;;;;; diff-mode
   `(diff-added ((,class :background "#1d3c25" :foreground "#b4ddb4")))
   `(diff-changed ((,class :background "#424200" :foreground "#d0daaf" :extend t)))
   `(diff-changed-unspecified ((,class :inherit diff-changed)))
   `(diff-context ((,class :foreground "#93959b")))
   `(diff-error ((,class :background "#a4202a" :foreground "#ffffff")))
   `(diff-file-header ((,class :inherit (bold diff-header))))
   `(diff-function ((,class :background "#304466" :foreground "#dae7ff")))
   `(diff-header ((,class :foreground "#ffffff")))
   `(diff-hunk-header ((,class :inherit bold :background "#304466" :foreground "#dae7ff")))
   `(diff-index ((,class :inherit bold :foreground "#79a8ff")))
   `(diff-indicator-added ((,class :inherit (diff-added bold) :foreground "#44bc44")))
   `(diff-indicator-changed ((,class :inherit (diff-changed bold) :foreground "#d0bc00")))
   `(diff-indicator-removed ((,class :inherit (diff-removed bold) :foreground "#ff8059") ))
   `(diff-nonexistent ((,class :inherit bold)))
   `(diff-refine-added ((,class :background "#005a36" :foreground "#e0f6e0")))
   `(diff-refine-changed ((,class :background "#585800" :foreground "#ffffcc")))
   `(diff-refine-removed ((,class :background "#852828" :foreground "#ffd9eb")))
   `(diff-removed ((,class :background "#601f29" :foreground "#eebdba")))
;;;;; dired
   `(dired-broken-symlink ((,class :inherit button :foreground "#ff8059" :underline t)))
   `(dired-directory ((,class :foreground "#2fafff")))
   `(dired-flagged ((,class :inherit bold :background "#5a0000" :foreground "#ff99aa")))
   `(dired-header ((,class :inherit bold :foreground "#ffffff")))
   `(dired-ignored ((,class :inherit shadow)))
   `(dired-mark ((,class :inherit bold :foreground "#79a8ff")))
   `(dired-marked ((,class :inherit bold :background "#002f2f" :foreground "#60cfa2")))
   `(dired-perm-write ((,class :foreground "#f8dec0")))
   `(dired-symlink ((,class :inherit button :foreground "#00d3d0" :underline t)))
   `(dired-warning ((,class :inherit bold :foreground "#d0bc00")))
;;;;; dired-async
   `(dired-async-failures ((,class :inherit bold :foreground "#ffa7ba")))
   `(dired-async-message ((,class :inherit bold :foreground "#34cfff")))
   `(dired-async-mode-message ((,class :inherit bold :foreground "#00d8b4")))
;;;;; dired-subtree
   ;; From modus-themes
   ;; remove backgrounds from dired-subtree faces, else they break
   ;; dired-{flagged,marked} and any other face that sets a background
   ;; such as hl-line.  Also, denoting depth by varying shades of gray
   ;; is not good for accessibility.
   `(dired-subtree-depth-1-face (()))
   `(dired-subtree-depth-2-face (()))
   `(dired-subtree-depth-3-face (()))
   `(dired-subtree-depth-4-face (()))
   `(dired-subtree-depth-5-face (()))
   `(dired-subtree-depth-6-face (()))
;;;;; display-fill-column-indicator-mode
   `(fill-column-indicator ((,class :height 1 :background "#3c3c3c" :foreground "#3c3c3c")))
;;;;; ediff
   `(ediff-current-diff-A ((,class :background "#601f29" :foreground "#eebdba")))
   `(ediff-current-diff-Ancestor ((,class :background "#203448" :foreground "#c6eaff" :extend t)))
   `(ediff-current-diff-B ((,class :background "#1d3c25" :foreground "#b4ddb4")))
   `(ediff-current-diff-C ((,class :background "#424200" :foreground "#d0daaf")))
   `(ediff-even-diff-A ((,class :background "#191a1b")))
   `(ediff-even-diff-Ancestor ((,class :background "#191a1b")))
   `(ediff-even-diff-B ((,class :background "#191a1b")))
   `(ediff-even-diff-C ((,class :background "#191a1b")))
   `(ediff-fine-diff-A ((,class :background "#852828" :foreground "#ffd9eb")))
   `(ediff-fine-diff-Ancestor ((,class :background "#004065" :foreground "#8ae4f2")))
   `(ediff-fine-diff-B ((,class :background "#005a36" :foreground "#e0f6e0")))
   `(ediff-fine-diff-C ((,class :background "#585800" :foreground "#ffffcc")))
   `(ediff-odd-diff-A ((,class :inherit ediff-even-diff-A)))
   `(ediff-odd-diff-Ancestor ((,class :inherit ediff-even-diff-Ancestor)))
   `(ediff-odd-diff-B ((,class :inherit ediff-even-diff-B)))
   `(ediff-odd-diff-C ((,class :inherit ediff-even-diff-C)))
;;;;; eglot
   `(eglot-mode-line ((,class :inherit bold :foreground "#d5b1ff")))
;;;;; el-search
   `(el-search-highlight-in-prompt-face ((,class :inherit bold :foreground "#f78fe7")))
   `(el-search-match ((,class :background "#874900" :foreground "#ffffff")))
   `(el-search-other-match ((,class :background "#00322e" :foreground "#bfebe0")))
   `(el-search-occur-match ((,class :background "#392a48" :foreground "#fbd6f4")))
;;;;; eldoc
   ;; From modus-themes
   ;; NOTE: see https://github.com/purcell/package-lint/issues/187
   (list 'eldoc-highlight-function-argument `((,class :inherit bold :background "#221000" :foreground "#d3b55f")))
;;;;; elfeed
   `(elfeed-log-date-face ((,class :inherit elfeed-search-date-face)))
   `(elfeed-log-debug-level-face ((,class :inherit elfeed-search-filter-face)))
   `(elfeed-log-error-level-face ((,class :inherit error)))
   `(elfeed-log-info-level-face ((,class :inherit success)))
   `(elfeed-log-warn-level-face ((,class :inherit warning)))
   `(elfeed-search-date-face ((,class :foreground "#00d3d0")))
   `(elfeed-search-feed-face ((,class :foreground "#82b0ec")))
   `(elfeed-search-filter-face ((,class :inherit bold :foreground "#d5b1ff")))
   `(elfeed-search-last-update-face ((,class :inherit bold :foreground "#00d8b4")))
   `(elfeed-search-tag-face ((,class :foreground "#ef9fe4")))
   `(elfeed-search-title-face ((,class :foreground "#e0e6f0")))
   `(elfeed-search-unread-count-face ((,class :inherit bold :foreground "#f4f4f4")))
   `(elfeed-search-unread-title-face ((,class :inherit bold :foreground "#ffffff")))
;;;;; elfeed-score
   `(elfeed-score-date-face ((,class :foreground "#2fafff")))
   `(elfeed-score-debug-level-face ((,class :foreground "#b6a0ff")))
   `(elfeed-score-error-level-face ((,class :foreground "#ff8059") ))
   `(elfeed-score-info-level-face ((,class :foreground "#00d3d0")))
   `(elfeed-score-warn-level-face ((,class :foreground "#d0bc00")))
;;;;; embark
   `(embark-keybinding ((,class :inherit bold :foreground "#00bcff")))
   `(embark-collect-marked ((,class :inherit bold :background "#002f2f" :foreground "#60cfa2")))
;;;;; emms
   `(emms-browser-album-face ((,class :foreground "#b6a0ff")))
   `(emms-browser-artist-face ((,class :foreground "#00d3d0")))
   `(emms-browser-composer-face ((,class :foreground "#f78fe7")))
   `(emms-browser-performer-face ((,class :inherit emms-browser-artist-face)))
   `(emms-browser-track-face ((,class :inherit emms-playlist-track-face)))
   `(emms-browser-year/genre-face ((,class :foreground "#6ae4b9")))
   `(emms-playlist-track-face ((,class :foreground "#79a8ff")))
   `(emms-playlist-selected-face ((,class :inherit bold :foreground "#00bcff")))
   `(emms-metaplaylist-mode-current-face ((,class :inherit emms-playlist-selected-face)))
   `(emms-metaplaylist-mode-face ((,class :foreground "#00d3d0")))
;;;;; enh-ruby-mode (enhanced-ruby-mode)
   `(enh-ruby-heredoc-delimiter-face ((,class :inherit font-lock-constant-face)))
   `(enh-ruby-op-face ((,class :foreground "#ffffff")))
   `(enh-ruby-regexp-delimiter-face ((,class :inherit font-lock-regexp-grouping-construct)))
   `(enh-ruby-regexp-face ((,class :inherit font-lock-string-face)))
   `(enh-ruby-string-delimiter-face ((,class :inherit font-lock-string-face)))
   `(erm-syn-errline ((,class :foreground "#ef8690" :underline (:color "#ff4a6f" :style wave))))
   `(erm-syn-warnline ((,class :foreground "#b0aa00" :underline (:color "#d0de00" :style wave))))
;;;;; epa
   `(epa-field-body ((,class :foreground "#ffffff")))
   `(epa-field-name ((,class :inherit bold :foreground "#e0e6f0")))
   `(epa-mark ((,class :inherit bold :foreground "#feacd0")))
   `(epa-string ((,class :foreground "#79a8ff")))
   `(epa-validity-disabled ((,class :foreground "#ff8059") ))
   `(epa-validity-high ((,class :inherit bold :foreground "#00d3d0")))
   `(epa-validity-low ((,class :inherit shadow)))
   `(epa-validity-medium ((,class :foreground "#70b900")))
;;;;; eros
   `(eros-result-overlay-face ((,class :box (:line-width -1 :color "#2fafff") :background "#100f10" :foreground "#e0e6f0")))
;;;;; ert
   `(ert-test-result-expected ((,class :background "#006800" :foreground "#ffffff")))
   `(ert-test-result-unexpected ((,class :background "#a4202a" :foreground "#ffffff")))
;;;;; eshell
   `(eshell-ls-archive ((,class :foreground "#4ae2f0")))
   `(eshell-ls-backup ((,class :inherit shadow)))
   `(eshell-ls-clutter ((,class :foreground "#ef8b50")))
   `(eshell-ls-directory ((,class :foreground "#79a8ff")))
   `(eshell-ls-executable ((,class :foreground "#f78fe7")))
   `(eshell-ls-missing ((,class :background "#a4202a" :foreground "#ffffff")))
   `(eshell-ls-product ((,class :inherit shadow)))
   `(eshell-ls-readonly ((,class :foreground "#d2b580")))
   `(eshell-ls-special ((,class :foreground "#feacd0")))
   `(eshell-ls-symlink ((,class :inherit button :foreground "#00d3d0" :underline t)))
   `(eshell-ls-unreadable ((,class :background "#1e1e1e" :foreground "#bfc0c4")))
   `(eshell-prompt ((,class :foreground "#6ae4b9")))
;;;;; eshell-fringe-status
   `(eshell-fringe-status-failure ((,class :inherit error)))
   `(eshell-fringe-status-success ((,class :inherit success)))
;;;;; eshell-git-prompt
   `(eshell-git-prompt-add-face ((,class :foreground "#b6a0ff")))
   `(eshell-git-prompt-branch-face ((,class :foreground "#f78fe7")))
   `(eshell-git-prompt-directory-face ((,class :inherit bold :foreground "#2fafff")))
   `(eshell-git-prompt-exit-fail-face ((,class :inherit error)))
   `(eshell-git-prompt-exit-success-face ((,class :inherit success)))
   `(eshell-git-prompt-modified-face ((,class :foreground "#d0bc00")))
   `(eshell-git-prompt-powerline-clean-face ((,class :background "#00422a")))
   `(eshell-git-prompt-powerline-dir-face ((,class :background "#242679")))
   `(eshell-git-prompt-powerline-not-clean-face ((,class :background "#6f4f00")))
   `(eshell-git-prompt-robyrussell-branch-face ((,class :foreground "#f78fe7")))
   `(eshell-git-prompt-robyrussell-git-dirty-face ((,class :foreground "#d0bc00")))
   `(eshell-git-prompt-robyrussell-git-face ((,class :foreground "#b6a0ff")))
;;;;; eshell-prompt-extras (epe)
   `(epe-dir-face ((,class :inherit bold :foreground "#2fafff")))
   `(epe-git-dir-face ((,class :foreground "#ff9077")))
   `(epe-git-face ((,class :foreground "#f78fe7")))
   `(epe-pipeline-delimiter-face ((,class :inherit shadow)))
   `(epe-pipeline-host-face ((,class :foreground "#ffffff")))
   `(epe-pipeline-time-face ((,class :foreground "#ffffff")))
   `(epe-pipeline-user-face ((,class :foreground "#b6a0ff")))
   `(epe-remote-face ((,class :inherit (shadow italic))))
   `(epe-status-face ((,class :foreground "#b6a0ff")))
   `(epe-venv-face ((,class :inherit (shadow italic))))
;;;;; eshell-syntax-highlighting
   `(eshell-syntax-highlighting-directory-face ((,class :inherit eshell-ls-directory)))
   `(eshell-syntax-highlighting-invalid-face ((,class :foreground "#ff8059") ))
   `(eshell-syntax-highlighting-shell-command-face ((,class :foreground "#ffffff")))
;;;;; eww
   `(eww-invalid-certificate ((,class :foreground "#ffa0a0")))
   `(eww-valid-certificate ((,class :foreground "#82b0ec")))
   `(eww-form-checkbox ((,class :inherit eww-form-text)))
   `(eww-form-file ((,class :inherit eww-form-submit)))
   `(eww-form-select ((,class :inherit eww-form-submit)))
   `(eww-form-submit ((,class :background "#323232" :box (:line-width -1 :style released-button :color "#3c3c3c"))))
   `(eww-form-text ((,class :inherit widget-field)))
   `(eww-form-textarea ((,class :inherit eww-form-text)))
;;;;; eyebrowse
   `(eyebrowse-mode-line-active ((,class :inherit bold :foreground "#34cfff")))
;;;;; fancy-dabbrev
   `(fancy-dabbrev-menu-face ((,class :background "#191a1b" :foreground "#a8a8a8")))
   `(fancy-dabbrev-preview-face ((,class :inherit shadow :underline t)))
   `(fancy-dabbrev-selection-face ((,class :inherit bold :background "#005f88" :foreground "#ffffff")))
;;;;; flycheck
   `(flycheck-error ((,class :foreground "#ef8690" :underline (:color "#ff4a6f" :style wave))))
   `(flycheck-error-list-checker-name ((,class :foreground "#d5b1ff")))
   `(flycheck-error-list-column-number ((,class :foreground "#c6eaff")))
   `(flycheck-error-list-error ((,class :inherit bold :foreground "#ff8059") ))
   `(flycheck-error-list-filename ((,class :foreground "#2fafff")))
   `(flycheck-error-list-highlight ((,class :background "#292929" :extend t)))
   `(flycheck-error-list-id ((,class :foreground "#b6a0ff")))
   `(flycheck-error-list-id-with-explainer ((,class :inherit flycheck-error-list-id :box t)))
   `(flycheck-error-list-info ((,class :foreground "#00d3d0")))
   `(flycheck-error-list-line-number ((,class :foreground "#f8dec0")))
   `(flycheck-error-list-warning ((,class :foreground "#d0bc00")))
   `(flycheck-fringe-error ((,class :background "red2" :foreground "white")))
   `(flycheck-fringe-info ((,class :background "RoyalBlue3" :foreground "white")))
   `(flycheck-fringe-warning ((,class :background "gold3" :foreground "white")))
   `(flycheck-info ((,class :foreground "#9d9def" :underline (:color "#5f6fff" :style wave))))
   `(flycheck-verify-select-checker ((,class :box (:line-width 1 :color nil :style released-button))))
   `(flycheck-warning ((,class :foreground "#b0aa00" :underline (:color "#d0de00" :style wave))))
;;;;; flycheck-indicator
   `(flycheck-indicator-disabled ((,class :inherit italic :foreground "#bfc0c4")))
   `(flycheck-indicator-error ((,class :inherit bold :foreground "#ffa7ba")))
   `(flycheck-indicator-info ((,class :inherit bold :foreground "#34cfff")))
   `(flycheck-indicator-running ((,class :inherit bold :foreground "#d5b1ff")))
   `(flycheck-indicator-success ((,class :inherit bold :foreground "#70d73f")))
   `(flycheck-indicator-warning ((,class :inherit bold :foreground "#dbbe5f")))
;;;;; flymake
   `(flymake-error ((,class :foreground "#ef8690" :underline (:color "#ff4a6f" :style wave))))
   `(flymake-note ((,class :foreground "#9d9def" :underline (:color "#5f6fff" :style wave))))
   `(flymake-warning ((,class :foreground "#b0aa00" :underline (:color "#d0de00" :style wave))))
;;;;; flyspell
   `(flyspell-duplicate ((,class :foreground "#b0aa00" :underline (:color "#d0de00" :style wave))))
   `(flyspell-incorrect ((,class :foreground "#ef8690" :underline (:color "#ff4a6f" :style wave))))
;;;;; flx
   `(flx-highlight-face ((,class :inherit bold :foreground "#f78fe7")))
;;;;; font-lock
   `(font-lock-builtin-face ((,class :inherit bold :foreground "LawnGreen")))
   `(font-lock-comment-delimiter-face ((,class :inherit font-lock-comment-face)))
   `(font-lock-comment-face ((,class :inherit italic :foreground "burlywood")))
   `(font-lock-constant-face ((,class :foreground "DeepSkyBlue2")))
   `(font-lock-doc-face ((,class :inherit italic :foreground "LightCyan3")))
   `(font-lock-function-name-face ((,class :foreground "cyan")))
   `(font-lock-keyword-face ((,class :inherit bold :foreground "gold")))
   ;; Alternate font-lock-keyword-face, recommended for cider-inspector-mode
   ;; e.g. add use-alt-font-lock-keyword-face to cider-inspector-mode-hook
   `(alt-font-lock-keyword-face ((t :foreground "LightSkyBlue" :weight bold)))
   `(font-lock-negation-char-face ((,class :inherit bold :foreground "#d0bc00")))
   `(font-lock-preprocessor-face ((,class :foreground "#ff9077")))
   `(font-lock-regexp-grouping-backslash ((,class :inherit bold :foreground "#c0c530")))
   `(font-lock-regexp-grouping-construct ((,class :inherit bold :foreground "#ff9077")))
   `(font-lock-string-face ((,class :foreground "SpringGreen3")))
   `(font-lock-type-face ((,class :inherit bold :foreground "PaleGreen2")))
   `(font-lock-variable-name-face ((,class :foreground "gold3")))
   `(font-lock-warning-face ((,class :inherit bold :foreground "#ff8059")))
;;;;; forge
   `(forge-post-author ((,class :inherit bold :foreground "#ffffff")))
   `(forge-post-date ((,class :foreground "#c6eaff")))
   `(forge-topic-closed ((,class :inherit shadow)))
   `(forge-topic-merged ((,class :inherit shadow)))
   `(forge-topic-open ((,class :foreground "#bfebe0")))
   `(forge-topic-unmerged ((,class :inherit italic :foreground "#feacd0")))
   `(forge-topic-unread ((,class :inherit bold :foreground "#ffffff")))
;;;;; git-commit
   `(git-commit-comment-action ((,class :inherit font-lock-comment-face)))
   `(git-commit-comment-branch-local ((,class :inherit font-lock-comment-face :foreground "#79a8ff")))
   `(git-commit-comment-branch-remote ((,class :inherit font-lock-comment-face :foreground "#f78fe7")))
   `(git-commit-comment-detached ((,class :inherit font-lock-comment-face :foreground "#4ae2f0")))
   `(git-commit-comment-file ((,class :inherit font-lock-comment-face :foreground "#00d3d0")))
   `(git-commit-comment-heading ((,class :inherit (bold font-lock-comment-face))))
   `(git-commit-keyword ((,class :foreground "#feacd0")))
   `(git-commit-known-pseudo-header ((,class :foreground "#6ae4b9")))
   `(git-commit-nonempty-second-line ((,class :inherit error)))
   `(git-commit-overlong-summary ((,class :inherit warning)))
   `(git-commit-pseudo-header ((,class :foreground "#2fafff")))
   `(git-commit-summary ((,class :inherit bold :foreground "#2fafff")))
;;;;; git-rebase
   `(git-rebase-comment-hash ((,class :inherit font-lock-comment-face :foreground "#00d3d0")))
   `(git-rebase-comment-heading  ((,class :inherit (bold font-lock-comment-face))))
   `(git-rebase-description ((,class :foreground "#ffffff")))
   `(git-rebase-hash ((,class :foreground "#6ae4b9")))
;;;;; git-timemachine
   `(git-timemachine-commit ((,class :inherit bold :foreground "#dbbe5f")))
   `(git-timemachine-minibuffer-author-face ((,class :foreground "#f8dec0")))
   `(git-timemachine-minibuffer-detail-face ((,class :foreground "#ef8b50")))
;;;;; gnus
   `(gnus-button ((,class :inherit button)))
   `(gnus-cite-1 ((,class :inherit message-cited-text-1)))
   `(gnus-cite-2 ((,class :inherit message-cited-text-2)))
   `(gnus-cite-3 ((,class :inherit message-cited-text-3)))
   `(gnus-cite-4 ((,class :inherit message-cited-text-4)))
   `(gnus-cite-5 ((,class :inherit gnus-cite-1)))
   `(gnus-cite-6 ((,class :inherit gnus-cite-2)))
   `(gnus-cite-7 ((,class :inherit gnus-cite-3)))
   `(gnus-cite-8 ((,class :inherit gnus-cite-4)))
   `(gnus-cite-9 ((,class :inherit gnus-cite-1)))
   `(gnus-cite-10 ((,class :inherit gnus-cite-2)))
   `(gnus-cite-11 ((,class :inherit gnus-cite-3)))
   `(gnus-cite-attribution ((,class :inherit italic :foreground "#ffffff")))
   `(gnus-emphasis-bold ((,class :inherit bold)))
   `(gnus-emphasis-bold-italic ((,class :inherit bold-italic)))
   `(gnus-emphasis-highlight-words ((,class :background "#693200" :foreground "#e2d980")))
   `(gnus-emphasis-italic ((,class :inherit italic)))
   `(gnus-emphasis-underline-bold ((,class :inherit gnus-emphasis-bold :underline t)))
   `(gnus-emphasis-underline-bold-italic ((,class :inherit gnus-emphasis-bold-italic :underline t)))
   `(gnus-emphasis-underline-italic ((,class :inherit gnus-emphasis-italic :underline t)))
   `(gnus-group-mail-1 ((,class :inherit bold :foreground "#f78fe7")))
   `(gnus-group-mail-1-empty ((,class :foreground "#f78fe7")))
   `(gnus-group-mail-2 ((,class :inherit bold :foreground "#feacd0")))
   `(gnus-group-mail-2-empty ((,class :foreground "#feacd0")))
   `(gnus-group-mail-3 ((,class :inherit bold :foreground "#b6a0ff")))
   `(gnus-group-mail-3-empty ((,class :foreground "#b6a0ff")))
   `(gnus-group-mail-low ((,class :inherit bold :foreground "#e5cfef")))
   `(gnus-group-mail-low-empty ((,class :foreground "#e5cfef")))
   `(gnus-group-news-1 ((,class :inherit bold :foreground "#44bc44")))
   `(gnus-group-news-1-empty ((,class :foreground "#44bc44")))
   `(gnus-group-news-2 ((,class :inherit bold :foreground "#00d3d0")))
   `(gnus-group-news-2-empty ((,class :foreground "#00d3d0")))
   `(gnus-group-news-3 ((,class :inherit bold :foreground "#dfdfb0")))
   `(gnus-group-news-3-empty ((,class :foreground "#dfdfb0")))
   `(gnus-group-news-4 ((,class :inherit bold :foreground "#a8e5e5")))
   `(gnus-group-news-4-empty ((,class :foreground "#a8e5e5")))
   `(gnus-group-news-5 ((,class :inherit bold :foreground "#ffcccc")))
   `(gnus-group-news-5-empty ((,class :foreground "#ffcccc")))
   `(gnus-group-news-6 ((,class :inherit bold :foreground "#93959b")))
   `(gnus-group-news-6-empty ((,class :foreground "#93959b")))
   `(gnus-group-news-low ((,class :inherit bold :foreground "#b8e2b8")))
   `(gnus-group-news-low-empty ((,class :foreground "#b8e2b8")))
   `(gnus-header-content ((,class :inherit message-header-other)))
   `(gnus-header-from ((,class :inherit message-header-to :underline nil)))
   `(gnus-header-name ((,class :inherit message-header-name)))
   `(gnus-header-newsgroups ((,class :inherit message-header-newsgroups)))
   `(gnus-header-subject ((,class :inherit message-header-subject)))
   `(gnus-server-agent ((,class :inherit bold :foreground "#00d3d0")))
   `(gnus-server-closed ((,class :inherit bold :foreground "#feacd0")))
   `(gnus-server-cloud ((,class :inherit bold :foreground "#4ae2f0")))
   `(gnus-server-cloud-host ((,class :background "#004065" :foreground "#8ae4f2")))
   `(gnus-server-denied ((,class :inherit bold :foreground "#ff8059") ))
   `(gnus-server-offline ((,class :inherit bold :foreground "#d0bc00")))
   `(gnus-server-opened ((,class :inherit bold :foreground "#44bc44")))
   `(gnus-signature ((,class :inherit italic :foreground "#c6eaff")))
   `(gnus-splash ((,class :inherit shadow)))
   `(gnus-summary-cancelled ((,class :inherit bold :background "#3f2210" :foreground "#f0aa20" :extend t)))
   `(gnus-summary-high-ancient ((,class :inherit bold :foreground "#a8a8a8")))
   `(gnus-summary-high-read ((,class :inherit bold :foreground "#c6eaff")))
   `(gnus-summary-high-ticked ((,class :inherit bold :foreground "#ff9077")))
   `(gnus-summary-high-undownloaded ((,class :inherit bold :foreground "#d0bc00")))
   `(gnus-summary-high-unread ((,class :inherit bold :foreground "#ffffff")))
   `(gnus-summary-low-ancient ((,class :inherit italic :foreground "#a8a8a8")))
   `(gnus-summary-low-read ((,class :inherit italic :foreground "#a8a8a8")))
   `(gnus-summary-low-ticked ((,class :inherit italic :foreground "#ffb9ab")))
   `(gnus-summary-low-undownloaded ((,class :inherit italic :foreground "#e2d980")))
   `(gnus-summary-low-unread ((,class :inherit italic :foreground "#c6eaff")))
   `(gnus-summary-normal-ancient ((,class :foreground "#fbd6f4")))
   `(gnus-summary-normal-read ((,class :inherit shadow)))
   `(gnus-summary-normal-ticked ((,class :foreground "#ff9077")))
   `(gnus-summary-normal-undownloaded ((,class :foreground "#d0bc00")))
   `(gnus-summary-normal-unread ((,class :foreground "#ffffff")))
   `(gnus-summary-selected ((,class :inherit highlight :extend t)))
;;;;; gotest
   `(go-test--ok-face ((,class :inherit success)))
   `(go-test--error-face ((,class :inherit error)))
   `(go-test--warning-face ((,class :inherit warning)))
   `(go-test--pointer-face ((,class :foreground "#b6a0ff")))
   `(go-test--standard-face ((,class :foreground "#c6eaff")))
;;;;; helpful
   `(helpful-heading ((,class :inherit bold :foreground "#ffffff")))
;;;;; highlight region or ad-hoc regexp
   ;; From modus-themes
   ;; HACK 2022-06-23: The :inverse-video prevents hl-line-mode from
   ;; overriding the background.  Such an override really defeats the
   ;; purpose of setting those highlights.
   ;;
   ;; NOTE 2022-10-04: We do not use the t here but instead
   ;; hardcode color values.  We have to do this as the themes lack
   ;; entries in their palette for such an edge case.  Defining those
   ;; entries is not appropriate.
   ;; ;;   `(hi-aquamarine ((((class color) (min-colors 88) (background light))
   ;;                      :background "white" :foreground "#227f9f" :inverse-video t)
   ;;                     (((class color) (min-colors 88) (background dark))
   ;;                      :background "black" :foreground "#66cbdc" :inverse-video t)))
   `(hi-black-b ((,class :inverse-video t)))
   `(hi-black-hb ((,class :background "#000000" :foreground "#a8a8a8" :inverse-video t)))
   ;; ;;   `(hi-blue ((((class color) (min-colors 88) (background light))
   ;;                :background "white" :foreground "#3366dd" :inverse-video t)
   ;;               (((class color) (min-colors 88) (background dark))
   ;;                :background "black" :foreground "#aaccff" :inverse-video t)))
   `(hi-blue-b ((,class :inherit (bold hi-blue))))
   ;; ;;   `(hi-green ((((class color) (min-colors 88) (background light))
   ;;                 :background "white" :foreground "#008a00" :inverse-video t)
   ;;                (((class color) (min-colors 88) (background dark))
   ;;                 :background "black" :foreground "#66dd66" :inverse-video t)))
   `(hi-green-b ((,class :inherit (bold hi-green))))
   ;; ;;   `(hi-pink ((((class color) (min-colors 88) (background light))
   ;;                :background "white" :foreground "#bd30aa" :inverse-video t)
   ;;               (((class color) (min-colors 88) (background dark))
   ;;                :background "black" :foreground "#ff88ee" :inverse-video t)))
   ;; ;;   `(hi-red-b ((((class color) (min-colors 88) (background light))
   ;;                 :background "white" :foreground "#dd0000" :inverse-video t)
   ;;                (((class color) (min-colors 88) (background dark))
   ;;                 :background "black" :foreground "#f06666" :inverse-video t)))
   ;; ;;   `(hi-salmon ((((class color) (min-colors 88) (background light))
   ;;                  :background "white" :foreground "#bf555a" :inverse-video t)
   ;;                 (((class color) (min-colors 88) (background dark))
   ;;                  :background "black" :foreground "#e08a50" :inverse-video t)))
   ;; ;;   `(hi-yellow ((((class color) (min-colors 88) (background light))
   ;;                  :background "white" :foreground "#af6400" :inverse-video t)
   ;;                 (((class color) (min-colors 88) (background dark))
   ;;                  :background "black" :foreground "#faea00" :inverse-video t)))
   `(highlight ((,class :background "grey30" :foreground "#ffffff")))
   `(idle-highlight ((t (:background "grey50" :foreground "white"))))
   `(highlight-changes ((,class :foreground "#ef8b50" :underline nil)))
   `(highlight-changes-delete ((,class :background "#2c0614" :foreground "#ff8059" :underline t)))
   `(hl-line ((,class :inherit nil :background "gray20" :underline "gray40" :extend t)))
   ;; Alternate hl-line face, recommended for magit-mode
   ;; e.g. add use-alt-hl-line-face to magit-mode-hook
   `(alt-hl-line-face ((t :underline "gray50" :weight bold)))
;;;;; hl-todo
   `(hl-todo ((,class :inherit (bold italic) :foreground "#ff9077")))
;;;;; hydra
   `(hydra-face-amaranth ((,class :inherit bold :foreground "#c0c530")))
   `(hydra-face-blue ((,class :inherit bold :foreground "#2fafff")))
   `(hydra-face-pink ((,class :inherit bold :foreground "#ef9fe4")))
   `(hydra-face-red ((,class :inherit bold :foreground "#ffa0a0")))
   `(hydra-face-teal ((,class :inherit bold :foreground "#6ae4b9")))
;;;;; icomplete
   `(icomplete-first-match ((,class :inherit bold :foreground "#f78fe7")))
   `(icomplete-selected-match ((,class :inherit bold :background "#323232")))
;;;;; icomplete-vertical
   `(icomplete-vertical-separator ((,class :inherit shadow)))
;;;;; ido-mode
   `(ido-first-match ((,class :inherit bold :foreground "#f78fe7")))
   `(ido-incomplete-regexp ((,class :inherit error)))
   `(ido-indicator ((,class :background "#604200" :foreground "#e0e6f0")))
   `(ido-only-match ((,class :inherit ido-first-match)))
   `(ido-subdir ((,class :foreground "#2fafff")))
   `(ido-virtual ((,class :foreground "#b6a0ff")))
;;;;; iedit
   `(iedit-occurrence ((,class :background "#242679" :foreground "#8ecfff")))
   `(iedit-read-only-occurrence ((,class :background "#874900" :foreground "#ffffff")))
;;;;; iflipb
   `(iflipb-current-buffer-face ((,class :inherit bold :foreground "#4ae2f0")))
   `(iflipb-other-buffer-face ((,class :inherit shadow)))
;;;;; image-dired
   `(image-dired-thumb-flagged ((,class :background "#a4202a")))
   `(image-dired-thumb-header-file-name ((,class :inherit bold)))
   `(image-dired-thumb-header-file-size ((,class :foreground "#34cfff")))
   `(image-dired-thumb-mark ((,class :background "#006800" :foreground "#ffffff")))
;;;;; imenu-list
   `(imenu-list-entry-face-0 ((,class :foreground "#00d3d0")))
   `(imenu-list-entry-face-1 ((,class :foreground "#2fafff")))
   `(imenu-list-entry-face-2 ((,class :foreground "#6ae4b9")))
   `(imenu-list-entry-face-3 ((,class :foreground "#79a8ff")))
   `(imenu-list-entry-subalist-face-0 ((,class :inherit bold :foreground "#b6a0ff" :underline t)))
   `(imenu-list-entry-subalist-face-1 ((,class :inherit bold :foreground "#feacd0" :underline t)))
   `(imenu-list-entry-subalist-face-2 ((,class :inherit bold :foreground "#00c06f" :underline t)))
   `(imenu-list-entry-subalist-face-3 ((,class :inherit bold :foreground "#ff9077" :underline t)))
;;;;; info
   `(Info-quoted ((,class :foreground "#f78fe7"))) ; the capitalization is canonical
   `(info-header-node ((,class :inherit (shadow bold))))
   `(info-header-xref ((,class :foreground "#34cfff")))
   `(info-index-match ((,class :inherit match)))
   `(info-menu-header ((,class :inherit bold :foreground "#ffffff")))
   `(info-menu-star ((,class :foreground "#ff8059") ))
   `(info-node ((,class :inherit bold)))
   `(info-title-1 ((,class :inherit bold :foreground "#ffffff")))
   `(info-title-2 ((,class :inherit bold :foreground "#f8dec0")))
   `(info-title-3 ((,class :inherit bold :foreground "#c6eaff")))
   `(info-title-4 ((,class :inherit bold :foreground "#bfebe0")))
;;;;; ioccur
   `(ioccur-cursor ((,class :foreground "#ffffff")))
   `(ioccur-invalid-regexp ((,class :foreground "#ff8059") ))
   `(ioccur-match-face ((,class :background "#392a48" :foreground "#fbd6f4")))
   `(ioccur-match-overlay-face ((,class :background "#203448" :foreground "#c6eaff" :extend t)))
   `(ioccur-num-line-face ((,class :foreground "#f8dec0")))
   `(ioccur-overlay-face ((,class :background "#242679" :foreground "#8ecfff" :extend t)))
   `(ioccur-regexp-face ((,class :inherit bold :background "#7042a2" :foreground "#ffffff")))
   `(ioccur-title-face ((,class :inherit bold :foreground "#ffffff" :foreground "#c6eaff")))
;;;;; isearch, occur, and the like
   `(isearch ((,class :background "coral2" :foreground "#ffffff")))
   `(isearch-fail ((,class :background "#77002a" :foreground "#ffb9ab")))
   `(isearch-group-1 ((,class :background "#242679" :foreground "#8ecfff")))
   `(isearch-group-2 ((,class :background "#71206a" :foreground "#ffcaf0")))
   `(lazy-highlight ((,class :background "LightSteelBlue2" :foreground "black")))
   `(match ((,class :background "gray35" :foreground "grey85")))
   `(query-replace ((,class :background "#a4202a" :foreground "#ffffff")))
;;;;; journalctl-mode
   `(journalctl-error-face ((,class :inherit error)))
   `(journalctl-finished-face ((,class :inherit success)))
   `(journalctl-host-face ((,class :foreground "#2fafff")))
   `(journalctl-process-face ((,class :foreground "#6ae4b9")))
   `(journalctl-starting-face ((,class :foreground "#44bc44")))
   `(journalctl-timestamp-face ((,class :foreground "#c6eaff")))
   `(journalctl-warning-face ((,class :inherit warning)))
;;;;; js2-mode
   `(js2-error ((,class :foreground "#ef8690" :underline (:color "#ff4a6f" :style wave))))
   `(js2-external-variable ((,class :inherit font-lock-variable-name-face)))
   `(js2-function-call ((,class :inherit font-lock-function-name-face)))
   `(js2-function-param ((,class :inherit font-lock-constant-face)))
   `(js2-instance-member ((,class :inherit font-lock-keyword-face)))
   `(js2-jsdoc-html-tag-delimiter ((,class :foreground "#ffffff")))
   `(js2-jsdoc-html-tag-name ((,class :inherit font-lock-function-name-face)))
   `(js2-jsdoc-tag ((,class :inherit (font-lock-builtin-face font-lock-comment-face) :weight normal)))
   `(js2-jsdoc-type ((,class :inherit (font-lock-type-face font-lock-comment-face) :weight normal)))
   `(js2-jsdoc-value ((,class :inherit (font-lock-constant-face font-lock-comment-face) :weight normal)))
   `(js2-object-property ((,class :foreground "#ffffff")))
   `(js2-object-property-access ((,class :foreground "#ffffff")))
   `(js2-private-function-call ((,class :inherit font-lock-preprocessor-face)))
   `(js2-private-member ((,class :inherit font-lock-warning-face)))
   `(js2-warning ((,class :foreground "#b0aa00" :underline (:color "#d0de00" :style wave))))
;;;;; julia
   `(julia-macro-face ((,class :inherit font-lock-builtin-face)))
   `(julia-quoted-symbol-face ((,class :inherit font-lock-constant-face)))
;;;;; kaocha-runner
   `(kaocha-runner-error-face ((,class :inherit error)))
   `(kaocha-runner-success-face ((,class :inherit success)))
   `(kaocha-runner-warning-face ((,class :inherit warning)))
;;;;; line numbers (display-line-numbers-mode and global variant)
   `(line-number ((,class :background "#100f10" :foreground "#a8a8a8")))
   `(line-number-current-line ((,class :inherit (bold line-number) :background "#323232" :foreground "#ffffff")))
   `(line-number-major-tick ((,class :inherit (bold line-number) :background "#221000" :foreground "#dfdfb0")))
   `(line-number-minor-tick ((,class :inherit (bold line-number) :background "#1e1e1e" :foreground "#a8a8a8")))
;;;;; lsp-mode
   `(lsp-face-highlight-read ((,class :background "#10387c" :foreground "#e0e6f0" :underline t)))
   `(lsp-face-highlight-textual ((,class :background "DimGrey" :foreground "#e0e6f0")))
   `(lsp-face-highlight-write ((,class :inherit bold :background "#242679" :foreground "#8ecfff")))
   `(lsp-face-semhl-constant ((,class :foreground "#00bcff")))
   `(lsp-face-semhl-deprecated ((,class :foreground "#b0aa00" :underline (:color "#d0de00" :style wave))))
   `(lsp-face-semhl-enummember ((,class :foreground "#00bcff")))
   `(lsp-face-semhl-field ((,class :foreground "#4ae2f0")))
   `(lsp-face-semhl-field-static ((,class :inherit italic :foreground "#4ae2f0")))
   `(lsp-face-semhl-function ((,class :foreground "#feacd0")))
   `(lsp-face-semhl-method ((,class :foreground "#feacd0")))
   `(lsp-face-semhl-namespace ((,class :inherit bold :foreground "#f78fe7")))
   `(lsp-face-semhl-preprocessor ((,class :foreground "#ff9077")))
   `(lsp-face-semhl-static-method ((,class :inherit italic :foreground "#feacd0")))
   `(lsp-face-semhl-type-class ((,class :foreground "#f78fe7")))
   `(lsp-face-semhl-type-enum ((,class :foreground "#f78fe7")))
   `(lsp-face-semhl-type-primitive ((,class :inherit italic :foreground "#f78fe7")))
   `(lsp-face-semhl-type-template ((,class :inherit italic :foreground "#f78fe7")))
   `(lsp-face-semhl-type-typedef ((,class :inherit italic :foreground "#f78fe7")))
   `(lsp-face-semhl-variable ((,class :foreground "#00d3d0")))
   `(lsp-face-semhl-variable-local ((,class :foreground "#00d3d0")))
   `(lsp-face-semhl-variable-parameter ((,class :foreground "#6ae4b9")))
   `(lsp-lens-face ((,class  :inherit shadow :height 0.8)))
   `(lsp-lens-mouse-face ((,class :height 0.8 :foreground "#00bcff" :underline t)))
   `(lsp-ui-doc-background ((,class :background "#191a1b")))
   `(lsp-ui-doc-header ((,class :background "#212121" :foreground "#dddddd")))
   `(lsp-ui-doc-url ((,class :inherit button)))
   `(lsp-ui-peek-filename ((,class :foreground "#f8dec0")))
   `(lsp-ui-peek-footer ((,class :background "#212121" :foreground "#dddddd")))
   `(lsp-ui-peek-header ((,class :background "#212121" :foreground "#dddddd")))
   `(lsp-ui-peek-highlight ((,class :background "#10387c" :foreground "#e0e6f0")))
   `(lsp-ui-peek-line-number ((,class :inherit shadow)))
   `(lsp-ui-peek-list ((,class :background "#100f10")))
   `(lsp-ui-peek-peek ((,class :background "#191a1b")))
   `(lsp-ui-peek-selection ((,class :background "#00415e" :foreground "#e0e6f0")))
   `(lsp-ui-sideline-code-action ((,class :foreground "#d0bc00")))
   `(lsp-ui-sideline-current-symbol ((,class :inherit bold :height 0.99 :box (:line-width -1 :style nil) :foreground "#ffffff")))
   `(lsp-ui-sideline-symbol ((,class :inherit bold :height 0.99 :box (:line-width -1 :style nil) :foreground "#a8a8a8")))
   `(lsp-ui-sideline-symbol-info ((,class :inherit italic :height 0.99)))
;;;;; macrostep
   `(macrostep-compiler-macro-face ((,class :inherit italic)))
   `(macrostep-expansion-highlight-face ((,class :background "#0f0e39")))
   `(macrostep-gensym-1 ((,class :inherit bold :foreground "#2fafff" :box t)))
   `(macrostep-gensym-2 ((,class :inherit bold :foreground "#44bc44" :box t)))
   `(macrostep-gensym-3 ((,class :inherit bold :foreground "#d0bc00" :box t)))
   `(macrostep-gensym-4 ((,class :inherit bold :foreground "#ff8059" :box t)))
   `(macrostep-gensym-5 ((,class :inherit bold :foreground "#feacd0" :box t)))
   `(macrostep-macro-face ((,class :inherit button :foreground "#70b900")))
;;;;; magit
   `(magit-bisect-bad ((,class :inherit error)))
   `(magit-bisect-good ((,class :inherit success)))
   `(magit-bisect-skip ((,class :inherit warning)))
   `(magit-blame-date ((,class :foreground "#2fafff")))
   `(magit-blame-dimmed ((,class :inherit shadow :family "Monaco" :weight normal :slant normal :background "#000000" :underline nil :overline nil :strike-through nil :box nil :extend nil)))
   `(magit-blame-hash ((,class :foreground "#f8dec0")))
   `(magit-blame-heading ((,class :inherit :family "Monaco" :weight normal :slant normal :foreground "#ffffff" :underline nil :overline nil :strike-through nil :box nil :background "#191a1b" :extend t)))
   `(magit-blame-highlight ((,class :background "#041529" :extend t)))
   `(magit-blame-margin ((,class :inherit magit-blame-highlight :family "Monaco" :weight normal :slant normal :foreground "#ffffff" :underline nil :overline nil :strike-through nil :box nil)))
   `(magit-blame-name ((,class :foreground "#b6a0ff")))
   `(magit-blame-summary ((,class :foreground "#6ae4b9")))
   ;; From modus-themes
   ;; ;; NOTE 2021-11-23: we do not set the `magit-branch-current'
   ;; ;; because its definition checks if the :box attribute can be set
   ;; ;; and if not, it uses :inverse-video.  Useful for terminal
   ;; ;; emulators.
   ;;
   ;; `(magit-branch-current ((,class :foreground "#00bcff" :box t)))
   `(magit-branch-local ((,class :foreground "#79a8ff")))
   `(magit-branch-remote ((,class :foreground "#f78fe7")))
   `(magit-branch-remote-head ((,class :foreground "#b6a0ff" :box t)))
   `(magit-branch-upstream ((,class :inherit italic)))
   `(magit-branch-warning ((,class :inherit warning)))
   `(magit-cherry-equivalent ((,class :background "#000000" :foreground "#ff62d4")))
   `(magit-cherry-unmatched ((,class :background "#000000" :foreground "#3fdfd0")))
   `(magit-diff-added ((,class :background "#0a280a" :foreground "#94ba94" :extend t)))
   `(magit-diff-added-highlight ((,class :background "#1d3c25" :foreground "#b4ddb4" :extend t)))
   `(magit-diff-base ((,class :background "#2a2000" :foreground "#b0ba9f" :extend t)))
   `(magit-diff-base-highlight ((,class :background "#424200" :foreground "#d0daaf" :extend t)))
   `(magit-diff-context ((,class :forefound "#93959b" :extend t)))
   `(magit-diff-context-highlight ((,class :background "#1e1e1e" :foreground "#bfc0c4" :extend t)))
   `(magit-diff-file-heading ((,class :inherit bold :foreground "#c6eaff" :extend t)))
   `(magit-diff-file-heading-highlight ((,class :inherit bold :background "#203448" :foreground "#c6eaff" :extend t)))
   `(magit-diff-file-heading-selection ((,class :background "#004065" :foreground "#8ae4f2" :extend t)))
   `(magit-diff-hunk-heading ((,class :inherit bold :background "#323232" :foreground "#bfc0c4" :extend t)))
   `(magit-diff-hunk-heading-highlight ((,class :inherit bold :background "#304466" :foreground "#dae7ff" :extend t)))
   `(magit-diff-hunk-heading-selection ((,class :background "#242679" :foreground "#8ecfff" :extend t)))
   `(magit-diff-hunk-region ((,class :inherit bold :extend t)))
   `(magit-diff-lines-boundary ((,class :background "#ffffff" :extend t)))
   `(magit-diff-lines-heading ((,class :background "#71206a" :foreground "#ffcaf0" :extend t)))
   `(magit-diff-removed ((,class :background "#40160f" :foreground "#c6adaa" :extend t)))
   `(magit-diff-removed-highlight ((,class :background "#601f29" :foreground "#eebdba" :extend t)))
   `(magit-diffstat-added ((,class :foreground "#44bc44")))
   `(magit-diffstat-removed ((,class :foreground "#ff8059") ))
   `(magit-dimmed ((,class :foreground "#93959b")))
   `(magit-filename ((,class :foreground "#c6eaff")))
   `(magit-hash ((,class :inherit shadow)))
   `(magit-head ((,class :inherit magit-branch-local)))
   `(magit-header-line ((,class :inherit bold :foreground "#d5b1ff")))
   `(magit-header-line-key ((,class :inherit bold :foreground "#00bcff")))
   `(magit-header-line-log-select ((,class :inherit bold :foreground "#ffffff")))
   `(magit-keyword ((,class :foreground "#feacd0")))
   `(magit-keyword-squash ((,class :inherit bold :foreground "#d3b55f")))
   `(magit-log-author ((,class :foreground "#00d3d0")))
   `(magit-log-date ((,class :inherit shadow)))
   `(magit-log-graph ((,class :foreground "#e0e6f0")))
   `(magit-mode-line-process ((,class :inherit bold :foreground "#00d8b4")))
   `(magit-mode-line-process-error ((,class :inherit bold :foreground "#ffa7ba")))
   `(magit-process-ng ((,class :inherit error)))
   `(magit-process-ok ((,class :inherit success)))
   `(magit-reflog-amend ((,class :inherit warning)))
   `(magit-reflog-checkout ((,class :inherit bold :foreground "#79a8ff")))
   `(magit-reflog-cherry-pick ((,class :inherit success)))
   `(magit-reflog-commit ((,class :inherit bold)))
   `(magit-reflog-merge ((,class :inherit success)))
   `(magit-reflog-other ((,class :inherit bold :foreground "#00d3d0")))
   `(magit-reflog-rebase ((,class :inherit bold :foreground "#feacd0")))
   `(magit-reflog-remote ((,class :inherit bold :foreground "#b6a0ff")))
   `(magit-reflog-reset ((,class :inherit error)))
   `(magit-refname ((,class :inherit shadow)))
   `(magit-refname-pullreq ((,class :inherit shadow)))
   `(magit-refname-stash ((,class :inherit shadow)))
   `(magit-refname-wip ((,class :inherit shadow)))
   `(magit-section ((,class :background "#100f10" :foreground "#ffffff")))
   `(magit-section-heading ((,class :inherit bold :foreground "#00d3d0")))
   `(magit-section-heading-selection ((,class :inherit bold :background "#004065" :foreground "#8ae4f2")))
   `(magit-section-highlight ((,class :background "#191a1b")))
   `(magit-sequence-done ((,class :inherit success)))
   `(magit-sequence-drop ((,class :inherit error)))
   `(magit-sequence-exec ((,class :inherit bold :foreground "#f78fe7")))
   `(magit-sequence-head ((,class :inherit bold :foreground "#4ae2f0")))
   `(magit-sequence-onto ((,class :inherit (bold shadow))))
   `(magit-sequence-part ((,class :inherit warning)))
   `(magit-sequence-pick ((,class :inherit bold)))
   `(magit-sequence-stop ((,class :inherit error)))
   `(magit-signature-bad ((,class :inherit error)))
   `(magit-signature-error ((,class :inherit error)))
   `(magit-signature-expired ((,class :inherit warning)))
   `(magit-signature-expired-key ((,class :foreground "#d0bc00")))
   `(magit-signature-good ((,class :inherit success)))
   `(magit-signature-revoked ((,class :inherit bold :foreground "#feacd0")))
   `(magit-signature-untrusted ((,class :inherit (bold shadow))))
   `(magit-tag ((,class :foreground "#d3b55f")))
;;;;; magit-imerge
   `(magit-imerge-overriding-value ((,class :inherit bold :foreground "#ef8b50")))
;;;;; make-mode (makefiles)
   `(makefile-makepp-perl ((,class :background "#041529")))
   `(makefile-space ((,class :background "#230631")))
;;;;; man
   `(Man-overstrike ((,class :inherit bold :foreground "#f78fe7")))
   `(Man-reverse ((,class :background "#49366e" :foreground "#e0e6f0")))
   `(Man-underline ((,class :foreground "#6ae4b9" :underline t)))
;;;;; marginalia
   `(marginalia-archive ((,class :foreground "#6ae4b9")))
   `(marginalia-char ((,class :foreground "#feacd0")))
   `(marginalia-date ((,class :foreground "#00d3d0")))
   `(marginalia-documentation ((,class :inherit italic :foreground "#b0d6f5")))
   `(marginalia-file-name ((,class :foreground "#82b0ec")))
   `(marginalia-file-owner ((,class :foreground "#ffa0a0")))
   `(marginalia-file-priv-dir ((,class :foreground "#79a8ff")))
   `(marginalia-file-priv-exec ((,class :foreground "#f78fe7")))
   `(marginalia-file-priv-link ((,class :foreground "#00bcff")))
   `(marginalia-file-priv-no ((,class :foreground "gray50")))
   `(marginalia-file-priv-other ((,class :foreground "#d0bc00")))
   `(marginalia-file-priv-rare ((,class :foreground "#ff8059") ))
   `(marginalia-file-priv-read ((,class :foreground "#ffffff")))
   `(marginalia-file-priv-write ((,class :foreground "#00d3d0")))
   `(marginalia-function ((,class :foreground "#ef9fe4")))
   `(marginalia-key ((,class :inherit bold :foreground "#00bcff")))
   `(marginalia-lighter ((,class :foreground "#79a8ff")))
   `(marginalia-list ((,class :foreground "#cfa6ff")))
   `(marginalia-mode ((,class :foreground "#00d3d0")))
   `(marginalia-modified ((,class :foreground "#ef9fe4")))
   `(marginalia-null ((,class :inherit shadow)))
   `(marginalia-number ((,class :foreground "#00d3d0")))
   `(marginalia-size ((,class :foreground "#a4d0bb")))
   `(marginalia-string ((,class :foreground "#79a8ff")))
   `(marginalia-symbol ((,class :foreground "#80b2f0")))
   `(marginalia-true ((,class :foreground "#ffffff")))
   `(marginalia-type ((,class :foreground "#6ae4b9")))
   `(marginalia-value ((,class :foreground "#00d3d0")))
   `(marginalia-version ((,class :foreground "#00d3d0")))
;;;;; markdown-mode
   `(markdown-blockquote-face ((,class :inherit italic :foreground "#c6eaff")))
   `(markdown-bold-face ((,class :inherit bold)))
   `(markdown-code-face ((,class :background "#100f10" :extend t)))
   `(markdown-comment-face ((,class :inherit font-lock-comment-face)))
   `(markdown-footnote-marker-face ((,class :inherit bold :foreground "#4ae2f0")))
   `(markdown-footnote-text-face ((,class :inherit italic :foreground "#ffffff")))
   `(markdown-gfm-checkbox-face ((,class :foreground "#d3b55f")))
   `(markdown-header-delimiter-face ((,class :inherit bold :foreground "#e0e6f0")))
   `(markdown-header-face ((,class nil)))
   `(markdown-header-face-1 ((,class :inherit bold :foreground "#ffffff")))
   `(markdown-header-face-2 ((,class :inherit bold :foreground "#f8dec0")))
   `(markdown-header-face-3 ((,class :inherit bold :foreground "#c6eaff")))
   `(markdown-header-face-4 ((,class :inherit bold :foreground "#bfebe0")))
   `(markdown-header-face-5 ((,class :inherit bold :foreground "#fbd6f4")))
   `(markdown-header-face-6 ((,class :inherit bold :foreground "#dfdfb0")))
   `(markdown-header-rule-face ((,class :inherit bold :foreground "#f8dec0")))
   `(markdown-highlighting-face ((,class :background "#693200" :foreground "#e2d980")))
   `(markdown-hr-face ((,class :inherit bold :foreground "#f8dec0")))
   `(markdown-html-attr-name-face ((,class :foreground "#00d3d0")))
   `(markdown-html-attr-value-face ((,class :foreground "#2fafff")))
   `(markdown-html-entity-face ((,class :foreground "#00d3d0")))
   `(markdown-html-tag-delimiter-face ((,class :foreground "#bfebe0")))
   `(markdown-html-tag-name-face ((,class :foreground "#f78fe7")))
   `(markdown-inline-code-face ((,class :foreground "#f78fe7")))
   `(markdown-italic-face ((,class :inherit italic)))
   `(markdown-language-info-face ((,class :foreground "#c6eaff")))
   `(markdown-language-keyword-face ((,class :background "#191a1b" :foreground "#a8a8a8")))
   `(markdown-line-break-face ((,class :background "#004065" :foreground "#8ae4f2" :underline t)))
   `(markdown-link-face ((,class :inherit button)))
   `(markdown-link-title-face ((,class :inherit italic :foreground "#c6eaff")))
   `(markdown-list-face ((,class :foreground "#e0e6f0")))
   `(markdown-markup-face ((,class :inherit shadow)))
   `(markdown-math-face ((,class :foreground "#b6a0ff")))
   `(markdown-metadata-key-face ((,class :foreground "#6ae4b9")))
   `(markdown-metadata-value-face ((,class :foreground "#79a8ff")))
   `(markdown-missing-link-face ((,class :inherit bold :foreground "#d0bc00")))
   `(markdown-plain-url-face ((,class :inherit markdown-link-face)))
   `(markdown-pre-face ((,class :inherit markdown-code-face :foreground "#bfebe0")))
   `(markdown-reference-face ((,class :inherit markdown-markup-face)))
   `(markdown-strike-through-face ((,class :strike-through t)))
   `(markdown-table-face ((,class :foreground "#c6eaff")))
   `(markdown-url-face ((,class :foreground "#79a8ff")))
;;;;; markup-faces (`adoc-mode')
   `(markup-attribute-face ((,class :inherit (italic markup-meta-face))))
   `(markup-bold-face ((,class :inherit bold :foreground "#ffcccc")))
   `(markup-code-face ((,class :foreground "#feacd0")))
   `(markup-comment-face ((,class :inherit font-lock-comment-face)))
   `(markup-complex-replacement-face ((,class :background "#230631" :foreground "#b6a0ff")))
   `(markup-emphasis-face ((,class :inherit markup-italic-face)))
   `(markup-error-face ((,class :inherit error)))
   `(markup-gen-face ((,class :foreground "#f78fe7")))
   `(markup-internal-reference-face ((,class :inherit italic :foreground "#a8a8a8")))
   `(markup-italic-face ((,class :inherit italic)))
   `(markup-list-face ((,class :background "#203448" :foreground "#c6eaff")))
   `(markup-meta-face ((,class :inherit shadow)))
   `(markup-meta-hide-face ((,class :foreground "gray50")))
   `(markup-reference-face ((,class :inherit italic :foreground "#79a8ff")))
   `(markup-replacement-face ((,class :foreground "#ef8b50")))
   `(markup-secondary-text-face ((,class :height 0.9 :foreground "#6ae4b9")))
   `(markup-small-face ((,class :inherit markup-gen-face :height 0.9)))
   `(markup-strong-face ((,class :inherit markup-bold-face)))
   `(markup-subscript-face ((,class :height 0.9 :foreground "#b6a0ff")))
   `(markup-superscript-face ((,class :height 0.9 :foreground "#b6a0ff")))
   `(markup-table-cell-face ((,class :background "#1e1e1e" :foreground "#bfc0c4")))
   `(markup-table-face ((,class :background "#1e1e1e" :foreground "#bfc0c4")))
   `(markup-table-row-face ((,class :background "#203448" :foreground "#c6eaff")))
   `(markup-title-0-face ((,class :inherit bold :foreground "#ffffff")))
   `(markup-title-1-face ((,class :inherit bold :foreground "#f8dec0")))
   `(markup-title-2-face ((,class :inherit bold :foreground "#c6eaff")))
   `(markup-title-3-face ((,class :inherit bold :foreground "#bfebe0")))
   `(markup-title-4-face ((,class :inherit bold :foreground "#fbd6f4")))
   `(markup-title-5-face ((,class :inherit bold :foreground "#dfdfb0")))
   `(markup-verbatim-face ((,class :background "#191a1b")))
;;;;; messages
   `(message-cited-text-1 ((,class :foreground "#82b0ec")))
   `(message-cited-text-2 ((,class :foreground "#d2b580")))
   `(message-cited-text-3 ((,class :foreground "#ef9fe4")))
   `(message-cited-text-4 ((,class :foreground "#a4d0bb")))
   `(message-header-cc ((,class :foreground "#00bcff")))
   `(message-header-name ((,class :inherit bold :foreground "#00d3d0")))
   `(message-header-newsgroups ((,class :inherit message-header-other)))
   `(message-header-other ((,class :foreground "#fbd6f4")))
   `(message-header-subject ((,class :inherit bold :foreground "#f78fe7")))
   `(message-header-to ((,class :inherit bold :foreground "#b6a0ff")))
   `(message-header-xheader ((,class :foreground "#79a8ff")))
   `(message-mml ((,class :foreground "#6ae4b9")))
   `(message-separator ((,class :background "#323232" :foreground "#ffffff")))
;;;;; mode-line
   `(mode-line ((,class :background "#323232" :foreground "#f4f4f4" :box "#a8a8a8")))
   `(mode-line-active ((,class :inherit mode-line)))
   `(mode-line-buffer-id ((,class :inherit bold)))
   `(mode-line-emphasis ((,class :inherit bold :foreground "#d5b1ff")))
   `(mode-line-highlight ((,class :inherit 'highlight)))
   `(mode-line-inactive ((,class :background "#1e1e1e" :foreground "#bfc0c4" :box "#3c3c3c")))
;;;;; mono-complete
   `(mono-complete-preview-face ((t :inherit shadow)))
;;;;; mpdel
   `(mpdel-browser-directory-face ((,class :foreground "#2fafff")))
   `(mpdel-playlist-current-song-face ((,class :inherit bold :foreground "#00bcff")))
;;;;; mu4e
   `(mu4e-attach-number-face ((,class :inherit bold :foreground "#e0e6f0")))
   `(mu4e-cited-1-face ((,class :inherit message-cited-text-1)))
   `(mu4e-cited-2-face ((,class :inherit message-cited-text-2)))
   `(mu4e-cited-3-face ((,class :inherit message-cited-text-3)))
   `(mu4e-cited-4-face ((,class :inherit message-cited-text-4)))
   `(mu4e-cited-5-face ((,class :inherit message-cited-text-1)))
   `(mu4e-cited-6-face ((,class :inherit message-cited-text-2)))
   `(mu4e-cited-7-face ((,class :inherit message-cited-text-3)))
   `(mu4e-compose-header-face ((,class :inherit mu4e-compose-separator-face)))
   `(mu4e-compose-separator-face ((,class :background "#323232" :foreground "#ffffff")))
   `(mu4e-contact-face ((,class :inherit message-header-to)))
   `(mu4e-context-face ((,class :foreground "#34cfff")))
   `(mu4e-draft-face ((,class :foreground "#f78fe7")))
   `(mu4e-flagged-face ((,class :foreground "#ff9077")))
   `(mu4e-footer-face ((,class :inherit italic :foreground "#c6eaff")))
   `(mu4e-forwarded-face ((,class :foreground "#b6a0ff")))
   `(mu4e-header-face ((,class :inherit shadow)))
   `(mu4e-header-highlight-face ((,class :background "#292929" :extend t)))
   `(mu4e-header-key-face ((,class :inherit message-header-name)))
   `(mu4e-header-marks-face ((,class :inherit mu4e-special-header-value-face)))
   `(mu4e-header-title-face ((,class :foreground "#bfebe0")))
   `(mu4e-header-value-face ((,class :inherit message-header-other)))
   `(mu4e-highlight-face ((,class :inherit bold :foreground "#00bcff")))
   `(mu4e-link-face ((,class :inherit button)))
   `(mu4e-modeline-face ((,class :foreground "#d5b1ff")))
   `(mu4e-moved-face ((,class :inherit italic :foreground "#d0bc00")))
   `(mu4e-ok-face ((,class :inherit bold :foreground "#44bc44")))
   `(mu4e-region-code ((,class :background "#392a48" :foreground "#fbd6f4")))
   `(mu4e-related-face ((,class :inherit (italic shadow))))
   `(mu4e-replied-face ((,class :foreground "#2fafff")))
   `(mu4e-special-header-value-face ((,class :inherit message-header-subject)))
   `(mu4e-system-face ((,class :inherit italic :foreground "#ff99aa")))
   `(mu4e-title-face ((,class :foreground "#ffffff")))
   `(mu4e-trashed-face ((,class :foreground "#ff8059") ))
   `(mu4e-unread-face ((,class :inherit bold)))
   `(mu4e-url-number-face ((,class :inherit shadow)))
   `(mu4e-view-body-face ((,class :foreground "#ffffff")))
   `(mu4e-warning-face ((,class :inherit warning)))
;;;;; multiple-cursors
   `(mc/cursor-bar-face ((,class :height 1 :foreground "#ffffff" :background "#000000")))
   `(mc/cursor-face ((,class :inverse-video t)))
   `(mc/region-face ((,class :inherit region)))
;;;;; nxml-mode
   `(nxml-attribute-colon ((,class :foreground "#ffffff")))
   `(nxml-attribute-local-name ((,class :inherit font-lock-variable-name-face)))
   `(nxml-attribute-prefix ((,class  :inherit font-lock-type-face)))
   `(nxml-attribute-value ((,class :inherit font-lock-constant-face)))
   `(nxml-cdata-section-CDATA ((,class :inherit error)))
   `(nxml-cdata-section-delimiter ((,class :inherit error)))
   `(nxml-char-ref-delimiter ((,class :foreground "#bfebe0")))
   `(nxml-char-ref-number ((,class :inherit bold :foreground "#bfebe0")))
   `(nxml-delimited-data ((,class :inherit italic :foreground "#c6eaff")))
   `(nxml-delimiter ((,class :foreground "#e0e6f0")))
   `(nxml-element-colon ((,class :foreground "#ffffff")))
   `(nxml-element-local-name ((,class :inherit font-lock-function-name-face)))
   `(nxml-element-prefix ((,class :inherit font-lock-builtin-face)))
   `(nxml-entity-ref-delimiter ((,class :foreground "#bfebe0")))
   `(nxml-entity-ref-name ((,class :inherit bold :foreground "#bfebe0")))
   `(nxml-glyph ((,class :background "#323232" :foreground "#ffffff")))
   `(nxml-hash ((,class :inherit (bold font-lock-string-face))))
   `(nxml-heading ((,class :inherit bold)))
   `(nxml-name ((,class :inherit font-lock-builtin-face)))
   `(nxml-namespace-attribute-colon ((,class :foreground "#ffffff")))
   `(nxml-namespace-attribute-prefix ((,class :inherit font-lock-variable-name-face)))
   `(nxml-processing-instruction-target ((,class :inherit font-lock-keyword-face)))
   `(nxml-prolog-keyword ((,class :inherit font-lock-keyword-face)))
   `(nxml-ref ((,class :inherit bold :foreground "#bfebe0")))
   `(rng-error ((,class :inherit error)))
;;;;; orderless
   `(orderless-match-face-0 ((,class :inherit bold :foreground "tomato")))
   `(orderless-match-face-1 ((,class :inherit bold :foreground "SpringGreen2")))
   `(orderless-match-face-2 ((,class :inherit bold :foreground "gold")))
   `(orderless-match-face-3 ((,class :inherit bold :foreground "DeepSkyBlue2")))
;;;;; org
   `(org-agenda-calendar-event ((,class :inherit shadow)))
   `(org-agenda-calendar-sexp ((,class :inherit shadow)))
   `(org-agenda-clocking ((,class :background "#221000" :foreground "#ef8b50")))
   `(org-agenda-column-dateline ((,class :background "#191a1b")))
   `(org-agenda-current-time ((,class :foreground "#80b2f0")))
   `(org-agenda-date ((,class :foreground "#00d3d0")))
   `(org-agenda-date-today ((,class :background "#203448" :foreground "#00d3d0")))
   `(org-agenda-date-weekend ((,class :foreground "#a4d0bb")))
   `(org-agenda-date-weekend-today ((,class :background "#203448" :foreground "#a4d0bb")))
   `(org-agenda-diary ((,class :inherit org-agenda-calendar-sexp)))
   `(org-agenda-dimmed-todo-face ((,class :inherit shadow)))
   `(org-agenda-done ((,class :foreground "#b8e2b8")))
   `(org-agenda-filter-category ((,class :inherit bold :foreground "#00d8b4")))
   `(org-agenda-filter-effort ((,class :inherit bold :foreground "#00d8b4")))
   `(org-agenda-filter-regexp ((,class :inherit bold :foreground "#00d8b4")))
   `(org-agenda-filter-tags ((,class :inherit bold :foreground "#00d8b4")))
   `(org-agenda-restriction-lock ((,class :background "#100f10" :foreground "#e0e6f0")))
   `(org-agenda-structure ((,class :inherit bold :height 1.15 :foreground "#79a8ff")))
   `(org-agenda-structure-filter ((,class :inherit org-agenda-structure :foreground "#d0bc00")))
   `(org-agenda-structure-secondary ((,class :foreground "#00d3d0")))
   `(org-archived ((,class :background "#191a1b" :foreground "#a8a8a8")))
   `(org-block ((,class :foreground "#ffffff" :extend t)))
   `(org-block-begin-line ((,class :foreground "#a8a8a8" :extend nil)))
   `(org-block-end-line ((,class :inherit org-block-begin-line)))
   `(org-checkbox ((,class :foreground "#d3b55f")))
   `(org-checkbox-statistics-done ((,class :inherit org-done)))
   `(org-checkbox-statistics-todo ((,class :inherit org-todo)))
   `(org-clock-overlay ((,class :background "#221000" :foreground "#f5aa80")))
   `(org-code ((,class :foreground "#6ae4b9" :extend t)))
   `(org-column ((,class :inherit default :background "#191a1b")))
   `(org-column-title ((,class :inherit (bold default) :underline t :background "#191a1b")))
   `(org-date ((,class :inherit button :foreground "#00d3d0" :underline t)))
   `(org-date-selected ((,class :foreground "#79a8ff" :inverse-video t)))
   `(org-dispatcher-highlight ((,class :inherit bold :background "#3f2210" :foreground "#f0aa20")))
   `(org-document-info ((,class :foreground "#c6eaff")))
   `(org-document-info-keyword ((,class :inherit shadow)))
   `(org-document-title ((,class :inherit bold :foreground "#6ae4b9")))
   `(org-done ((,class :foreground "#44bc44")))
   `(org-drawer ((,class :inherit shadow)))
   `(org-ellipsis (()))           ; inherits from the heading's colour
   `(org-footnote ((,class :inherit button :foreground "#79a8ff" :underline t)))
   `(org-formula ((,class :foreground "#ef8b50")))
   `(org-headline-done ((,class :foreground "#b8e2b8")))
   `(org-headline-todo ((,class :foreground "#ffcccc")))
   `(org-hide ((,class :foreground "#000000")))
   `(org-indent ((,class :inherit (fixed-pitch org-hide))))
   `(org-imminent-deadline ((,class :foreground "red")))
   `(org-latex-and-related ((,class :foreground "#e0b2d6")))
   `(org-level-1 ((,class :inherit bold :foreground "#ffffff")))
   `(org-level-2 ((,class :inherit bold :foreground "#f8dec0")))
   `(org-level-3 ((,class :inherit bold :foreground "#c6eaff")))
   `(org-level-4 ((,class :inherit bold :foreground "#bfebe0")))
   `(org-level-5 ((,class :inherit bold :foreground "#fbd6f4")))
   `(org-level-6 ((,class :inherit bold :foreground "#dfdfb0")))
   `(org-level-7 ((,class :inherit bold :foreground "#ffcccc")))
   `(org-level-8 ((,class :inherit bold :foreground "#e5cfef")))
   `(org-link ((,class :inherit button)))
   `(org-list-dt ((,class :inherit bold)))
   `(org-macro ((,class :foreground "#b6a0ff")))
   `(org-meta-line ((,class :inherit shadow)))
   `(org-mode-line-clock ((,class :foreground "#ffffff")))
   `(org-mode-line-clock-overrun ((,class :inherit bold :foreground "#ffa7ba")))
   `(org-priority ((,class :foreground "#feacd0")))
   `(org-property-value ((,class :foreground "#c6eaff")))
   `(org-quote ((,class :inherit org-block)))
   `(org-scheduled ((,class :foreground "#d2b580")))
   `(org-scheduled-previously ((,class :foreground "#d0bc00")))
   `(org-scheduled-today ((,class :foreground "#d0bc00")))
   `(org-sexp-date ((,class :foreground "#6ae4b9")))
   `(org-special-keyword ((,class :inherit shadow)))
   `(org-table ((,class :foreground "#c6eaff")))
   `(org-table-header ((,class :background "#203448" :foreground "#c6eaff")))
   `(org-tag ((,class :foreground "#e5cfef")))
   `(org-tag-group ((,class :inherit bold :foreground "#a8e5e5")))
   `(org-target ((,class :underline t)))
   `(org-time-grid ((,class :inherit shadow)))
   `(org-todo ((,class :foreground "#ff8059") ))
   `(org-upcoming-deadline ((,class :foreground "#ff9077")))
   `(org-upcoming-distant-deadline ((,class :foreground "#ffa0a0")))
   `(org-verbatim ((,class :foreground "#f78fe7")))
   `(org-verse ((,class :inherit org-quote)))
   `(org-warning ((,class :inherit bold :foreground "#ff9077")))
;;;;; outline-mode
   `(outline-1 ((,class :inherit bold :foreground "#ffffff")))
   `(outline-2 ((,class :inherit bold :foreground "#f8dec0")))
   `(outline-3 ((,class :inherit bold :foreground "#c6eaff")))
   `(outline-4 ((,class :inherit bold :foreground "#bfebe0")))
   `(outline-5 ((,class :inherit bold :foreground "#fbd6f4")))
   `(outline-6 ((,class :inherit bold :foreground "#dfdfb0")))
   `(outline-7 ((,class :inherit bold :foreground "#ffcccc")))
   `(outline-8 ((,class :inherit bold :foreground "#e5cfef")))
;;;;; outline-minor-faces
   `(outline-minor-0 (()))
;;;;; package (M-x list-packages)
   `(package-description ((,class :foreground "#c6eaff")))
   `(package-help-section-name ((,class :inherit bold :foreground "#00d3d0")))
   `(package-name ((,class :inherit button)))
   `(package-status-available ((,class :foreground "#6ae4b9")))
   `(package-status-avail-obso ((,class :inherit error)))
   `(package-status-built-in ((,class :foreground "#feacd0")))
   `(package-status-dependency ((,class :foreground "#b6a0ff")))
   `(package-status-disabled ((,class :background "#762422" :foreground "#e0e6f0")))
   `(package-status-external ((,class :foreground "#6ae4b9")))
   `(package-status-held ((,class :foreground "#c0c530")))
   `(package-status-incompat ((,class :inherit warning)))
   `(package-status-installed ((,class :foreground "#f8dec0")))
   `(package-status-new ((,class :inherit success)))
   `(package-status-unsigned ((,class :inherit error)))
;;;;; page-break-lines
   `(page-break-lines ((,class :inherit default :foreground "#969696")))
;;;;; pandoc-mode
   `(pandoc-citation-key-face ((,class :background "#100f10" :foreground "#f78fe7")))
   `(pandoc-directive-@@-face ((,class :background "#100f10" :foreground "#00bcff")))
   `(pandoc-directive-braces-face ((,class :foreground "#00bcff")))
   `(pandoc-directive-contents-face ((,class :foreground "#6ae4b9")))
   `(pandoc-directive-type-face ((,class :foreground "#feacd0")))
;;;;; paren-face
   `(parenthesis ((,class :foreground "#93959b")))
;;;;; pass
   `(pass-mode-directory-face ((,class :inherit bold :foreground "#c6eaff")))
   `(pass-mode-entry-face ((,class :background "#000000" :foreground "#ffffff")))
   `(pass-mode-header-face ((,class :foreground "#f8dec0")))
;;;;; perspective
   `(persp-selected-face ((,class :inherit bold :foreground "LightSkyBlue3")))
;;;;; proced
   `(proced-mark ((,class :inherit bold :foreground "#79a8ff")))
   `(proced-marked ((,class :inherit bold :background "#3f2210" :foreground "#f0aa20")))
   `(proced-sort-header ((,class :inherit bold :foreground "#fbd6f4" :underline t)))
;;;;; pulse
   `(pulse-highlight-start-face ((,class :background "#2a2a66" :extend t)))
;;;;; racket-mode
   `(racket-debug-break-face ((,class :background "#a4202a" :foreground "#ffffff")))
   `(racket-debug-locals-face ((,class :box (:line-width -1 :color nil) :foreground "#00c06f")))
   `(racket-debug-result-face ((,class :inherit bold :box (:line-width -1 :color nil) :foreground "#44bc44")))
   `(racket-here-string-face ((,class :foreground "#79a8ff")))
   `(racket-keyword-argument-face ((,class :foreground "#ef8b50")))
   `(racket-logger-config-face ((,class :inherit (shadow italic))))
   `(racket-logger-debug-face ((,class :foreground "#00bcff")))
   `(racket-logger-info-face ((,class :foreground "#9d9def")))
   `(racket-logger-topic-face ((,class :inherit italic :foreground "#feacd0")))
   `(racket-selfeval-face ((,class :foreground "#70b900")))
   `(racket-xp-error-face ((,class :foreground "#ef8690" :underline (:color "#ff4a6f" :style wave))))
;;;;; rainbow-blocks
   `(rainbow-blocks-depth-1-face ((,class :foreground "#b6a0ff")))
   `(rainbow-blocks-depth-2-face ((,class :foreground "#2fafff")))
   `(rainbow-blocks-depth-3-face ((,class :foreground "#f78fe7")))
   `(rainbow-blocks-depth-4-face ((,class :foreground "#44bc44")))
   `(rainbow-blocks-depth-5-face ((,class :foreground "#feacd0")))
   `(rainbow-blocks-depth-6-face ((,class :foreground "#00d3d0")))
   `(rainbow-blocks-depth-7-face ((,class :foreground "#d0bc00")))
   `(rainbow-blocks-depth-8-face ((,class :foreground "#4ae2f0")))
   `(rainbow-blocks-depth-9-face ((,class :foreground "#ef8b50")))
   `(rainbow-blocks-unmatched-face ((,class :foreground "#ff8059") ))
;;;;; rainbow-delimiters
   `(rainbow-delimiters-base-error-face ((,class :background "#762422" :foreground "#ffffff")))
   `(rainbow-delimiters-base-face ((,class :foreground "#ffffff")))
   `(rainbow-delimiters-depth-1-face ((,class :foreground "#ffffff")))
   `(rainbow-delimiters-depth-2-face ((,class :foreground "#ff62d4")))
   `(rainbow-delimiters-depth-3-face ((,class :foreground "#3fdfd0")))
   `(rainbow-delimiters-depth-4-face ((,class :foreground "#fba849")))
   `(rainbow-delimiters-depth-5-face ((,class :foreground "#9f80ff")))
   `(rainbow-delimiters-depth-6-face ((,class :foreground "#4fe42f")))
   `(rainbow-delimiters-depth-7-face ((,class :foreground "red")))
   `(rainbow-delimiters-depth-8-face ((,class :foreground "#4fafff")))
   `(rainbow-delimiters-depth-9-face ((,class :foreground "#f0dd60")))
   `(rainbow-delimiters-mismatched-face ((,class :inherit bold :background "#693200" :foreground "#e2d980")))
   `(rainbow-delimiters-unmatched-face ((,class :inherit bold :background "#77002a" :foreground "#ffb9ab")))
;;;;; regexp-builder (re-builder)
   `(reb-match-0 ((,class :background "#004065" :foreground "#8ae4f2")))
   `(reb-match-1 ((,class :background "#49366e" :foreground "#e0e6f0")))
   `(reb-match-2 ((,class :background "#2f4a00" :foreground "#e0e6f0")))
   `(reb-match-3 ((,class :background "#693200" :foreground "#e2d980")))
   `(reb-regexp-grouping-backslash ((,class :inherit font-lock-regexp-grouping-backslash)))
   `(reb-regexp-grouping-construct ((,class :inherit font-lock-regexp-grouping-construct)))
;;;;; rg (rg.el)
   `(rg-column-number-face ((,class :foreground "#b6a0ff")))
   `(rg-context-face ((,class :foreground "#93959b")))
   `(rg-error-face ((,class :inherit bold :foreground "#ff8059") ))
   `(rg-file-tag-face ((,class :foreground "#c6eaff")))
   `(rg-filename-face ((,class :inherit bold :foreground "#c6eaff")))
   `(rg-line-number-face ((,class :foreground "#f8dec0")))
   `(rg-literal-face ((,class :foreground "#79a8ff")))
   `(rg-match-face ((,class :background "#392a48" :foreground "#fbd6f4")))
   `(rg-regexp-face ((,class :foreground "#d5b1ff")))
   `(rg-toggle-off-face ((,class :inherit bold :foreground "#bfc0c4")))
   `(rg-toggle-on-face ((,class :inherit bold :foreground "#00d8b4")))
   `(rg-warning-face ((,class :inherit bold :foreground "#d0bc00")))
;;;;; ripgrep
   `(ripgrep-context-face ((,class :foreground "#93959b")))
   `(ripgrep-error-face ((,class :inherit bold :foreground "#ff8059") ))
   `(ripgrep-hit-face ((,class :foreground "#00d3d0")))
   `(ripgrep-match-face ((,class :background "#392a48" :foreground "#fbd6f4")))
;;;;; rmail
   `(rmail-header-name ((,class :foreground "#6ae4b9")))
   `(rmail-highlight ((,class :inherit bold :foreground "#f78fe7")))
;;;;; ruler-mode
   `(ruler-mode-column-number ((,class :inherit ruler-mode-default :foreground "#ffffff")))
   `(ruler-mode-comment-column ((,class :inherit ruler-mode-default :foreground "#ff8059") ))
   `(ruler-mode-current-column ((,class :inherit ruler-mode-default :background "#10387c" :foreground "#ffffff")))
   `(ruler-mode-default ((,class :inherit default :background "#191a1b" :foreground "#93959b")))
   `(ruler-mode-fill-column ((,class :inherit ruler-mode-default :foreground "#44bc44")))
   `(ruler-mode-fringes ((,class :inherit ruler-mode-default :foreground "#00d3d0")))
   `(ruler-mode-goal-column ((,class :inherit ruler-mode-default :foreground "#2fafff")))
   `(ruler-mode-margins ((,class :inherit ruler-mode-default :foreground "#000000")))
   `(ruler-mode-pad ((,class :inherit ruler-mode-default :background "#323232" :foreground "#bfc0c4")))
   `(ruler-mode-tab-stop ((,class :inherit ruler-mode-default :foreground "#f8dec0")))
;;;;; semantic
   `(semantic-complete-inline-face ((,class :foreground "#f8dec0" :underline t)))
   `(semantic-decoration-on-fileless-includes ((,class :background "#00422a" :foreground "#9ff0cf" )))
   `(semantic-decoration-on-private-members-face ((,class :background "#004065" :foreground "#8ae4f2")))
   `(semantic-decoration-on-protected-members-face ((,class :background "#100f10")))
   `(semantic-decoration-on-unknown-includes ((,class :background "#77002a" :foreground "#ffb9ab")))
   `(semantic-decoration-on-unparsed-includes ((,class :background "#693200" :foreground "#e2d980")))
   `(semantic-highlight-edits-face ((,class :background "#191a1b")))
   `(semantic-highlight-func-current-tag-face ((,class :background "#191a1b")))
   `(semantic-idle-symbol-highlight ((,class :background "#00322e" :foreground "#bfebe0")))
   `(semantic-tag-boundary-face ((,class :overline "#4fafff")))
   `(semantic-unmatched-syntax-face ((,class :underline "#ef8690")))
;;;;; sesman
   `(sesman-browser-button-face ((,class :inherit button)))
   `(sesman-browser-highligh-face ((,class :inherit highlight)))
   `(sesman-buffer-face ((,class :foreground "#feacd0")))
   `(sesman-directory-face ((,class :inherit bold :foreground "#2fafff")))
   `(sesman-project-face ((,class :inherit bold :foreground "#b6a0ff")))
;;;;; shell-script-mode
   `(sh-heredoc ((,class :foreground "#79a8ff")))
   `(sh-quoted-exec ((,class :inherit bold :foreground "#f78fe7")))
;;;;; shortdoc
   `(shortdoc-heading ((,class :inherit bold :foreground "#ffffff")))
   `(shortdoc-section (())) ; remove the default's variable-pitch style
;;;;; show-paren-mode
   `(show-paren-match ((,class :inherit bold :background "#7416b5" :foreground "#ffffff" :underline t)))
   `(show-paren-match-expression ((,class :background "grey12")))
   `(show-paren-mismatch ((,class :background "#a4202a" :foreground "#ffffff")))
;;;;; shr
   `(shr-abbreviation ((,class :foreground "#9d9def" :underline (:color "#5f6fff" :style wave))))
   `(shr-code ((,class :foreground "#f78fe7")))
   `(shr-h1 ((,class :inherit bold :foreground "#ffffff")))
   `(shr-h2 ((,class :inherit bold :foreground "#f8dec0")))
   `(shr-h3 ((,class :inherit bold :foreground "#c6eaff")))
   `(shr-h4 ((,class :inherit bold :foreground "#bfebe0")))
   `(shr-h5 ((,class :inherit bold :foreground "#fbd6f4")))
   `(shr-h6 ((,class :inherit bold :foreground "#dfdfb0")))
   `(shr-selected-link ((,class :background "#762422" :foreground "#e0e6f0")))
;;;;; sieve-mode
   `(sieve-action-commands ((,class :inherit font-lock-builtin-face)))
   `(sieve-control-commands ((,class :inherit font-lock-keyword-face)))
   `(sieve-tagged-arguments ((,class :inherit font-lock-type-face)))
   `(sieve-test-commands ((,class :inherit font-lock-function-name-face)))
;;;;; simple-modeline
   `(simple-modeline-status-modified ((t :foreground "DeepSkyBlue")))
;;;;; skewer-mode
   `(skewer-error-face ((,class :foreground "#ff8059" :underline t)))
;;;;; slime (sldb)
   `(sldb-condition-face ((,class :inherit font-lock-preprocessor-face)))
   `(sldb-restart-number-face ((,class :inherit bold)))
   `(sldb-restart-type-face ((,class :inherit font-lock-type-face)))
   `(sldb-restartable-frame-line-face ((,class :inherit success)))
   `(sldb-section-face ((,class :inherit bold :foreground "#ffffff")))
   `(slime-error-face ((,class :foreground "#ef8690" :underline (:color "#ff4a6f" :style wave))))
   `(slime-note-face ((,class :underline t)))
   `(slime-repl-input-face ((,class :inherit bold)))
   `(slime-repl-inputed-output-face ((,class :inherit font-lock-string-face)))
   `(slime-repl-output-mouseover-face ((,class :inherit highlight)))
   `(slime-repl-prompt-face ((,class :foreground "#6ae4b9")))
   `(slime-style-warning-face ((,class :foreground "#9d9def" :underline (:color "#5f6fff" :style wave))))
   `(slime-warning-face ((,class :foreground "#b0aa00" :underline (:color "#d0de00" :style wave))))
;;;;; sly
   `(sly-action-face ((,class :inherit font-lock-type-face)))
   `(sly-db-condition-face ((,class :inherit font-lock-preprocessor-face)))
   `(sly-db-restartable-frame-line-face ((,class :inherit success)))
   `(sly-error-face ((,class :foreground "#ef8690" :underline (:color "#ff4a6f" :style wave))))
   `(sly-mode-line ((,class :inherit mode-line-emphasis)))
   `(sly-mrepl-output-face ((,class :inherit font-lock-string-face)))
   `(sly-mrepl-output-face ((,class :inherit font-lock-string-face)))
   `(sly-mrepl-prompt-face ((,class :foreground "#6ae4b9")))
   `(sly-note-face ((,class :foreground "#9d9def" :underline (:color "#5f6fff" :style wave))))
   `(sly-stickers-placed-face ((,class :background "#1e1e1e" :foreground "#bfc0c4")))
   `(sly-style-warning-face ((,class :foreground "#9d9def" :underline (:color "#5f6fff" :style wave))))
   `(sly-warning-face ((,class :foreground "#b0aa00" :underline (:color "#d0de00" :style wave))))
;;;;; smartparens
   `(sp-pair-overlay-face ((,class :background "#382f27" :foreground "#f8dec0")))
   `(sp-show-pair-enclosing ((,class :background "#00322e" :foreground "#bfebe0")))
   `(sp-show-pair-match-face ((,class :inherit bold :background "#7416b5" :foreground "#ffffff" :underline t)))
   `(sp-show-pair-mismatch-face ((,class :background "#a4202a" :foreground "#ffffff")))
   `(sp-wrap-overlay-closing-pair ((,class :inherit sp-pair-overlay-face)))
   `(sp-wrap-overlay-face ((,class :inherit sp-pair-overlay-face)))
   `(sp-wrap-overlay-opening-pair ((,class :inherit sp-pair-overlay-face)))
   `(sp-wrap-tag-overlay-face ((,class :inherit sp-pair-overlay-face)))
;;;;; smerge
   `(smerge-base ((,class :background "#424200" :foreground "#d0daaf")))
   `(smerge-lower ((,class :background "#1d3c25" :foreground "#b4ddb4")))
   `(smerge-markers ((,class :background "#304466" :foreground "#dae7ff")))
   `(smerge-refined-added ((,class :background "#005a36" :foreground "#e0f6e0")))
   `(smerge-refined-changed (()))
   `(smerge-refined-removed ((,class :background "#852828" :foreground "#ffd9eb")))
   `(smerge-upper ((,class :background "#601f29" :foreground "#eebdba")))
;;;;; speedbar
   `(speedbar-button-face ((,class :inherit button)))
   `(speedbar-directory-face ((,class :inherit bold :foreground "#2fafff")))
   `(speedbar-file-face ((,class :foreground "#ffffff")))
   `(speedbar-highlight-face ((,class :inherit highlight)))
   `(speedbar-selected-face ((,class :inherit bold :foreground "#00d3d0")))
   `(speedbar-separator-face ((,class :background "#323232" :foreground "#ffffff")))
   `(speedbar-tag-face ((,class :foreground "#d3b55f")))
;;;;; spell-fu
   `(spell-fu-incorrect-face ((,class :foreground "#ef8690" :underline (:color "#ff4a6f" :style wave))))
;;;;; symbol-overlay
   `(symbol-overlay-default-face ((,class :background "#382f27" :foreground "#f8dec0")))
   `(symbol-overlay-face-1 ((,class :background "#2a40b8" :foreground "#ffffff")))
   `(symbol-overlay-face-2 ((,class :background "#71206a" :foreground "#ffcaf0")))
   `(symbol-overlay-face-3 ((,class :background "#874900" :foreground "#ffffff")))
   `(symbol-overlay-face-4 ((,class :background "#7042a2" :foreground "#ffffff")))
   `(symbol-overlay-face-5 ((,class :background "#a4202a" :foreground "#ffffff")))
   `(symbol-overlay-face-6 ((,class :background "#77002a" :foreground "#ffb9ab")))
   `(symbol-overlay-face-7 ((,class :background "#005f88" :foreground "#ffffff")))
   `(symbol-overlay-face-8 ((,class :background "#004065" :foreground "#8ae4f2")))
;;;;; syslog-mode
   `(syslog-debug ((,class :inherit bold :foreground "#6ae4b9")))
   `(syslog-error ((,class :inherit error)))
   `(syslog-file ((,class :inherit bold :foreground "#c6eaff")))
   `(syslog-hide ((,class :background "#000000" :foreground "#ffffff")))
   `(syslog-hour ((,class :inherit bold :foreground "#b6a0ff")))
   `(syslog-info ((,class :inherit success)))
   `(syslog-ip ((,class :inherit bold :foreground "#bfebe0" :underline t)))
   `(syslog-su ((,class :inherit bold :foreground "#ef8b50")))
   `(syslog-warn ((,class :inherit warning)))
;;;;; tab-bar-mode
   `(tab-bar ((,class :background "#323232")))
   `(tab-bar-tab-group-current ((,class :background "#0e0e0e" :box (:line-width (2 . -2) :color "gray50"))))
   `(tab-bar-tab-group-inactive ((,class :background "#424242" :foreground "#e0e6f0" :box (:line-width (2 . -2) :color "gray50"))))
   `(tab-bar-tab ((,class :inherit bold :background "#0e0e0e" :box (:line-width 2 :color "#0e0e0e"))))
   `(tab-bar-tab-inactive ((,class :background "#424242" :foreground "#e0e6f0" :box (:line-width 2 :color "#424242"))))
;;;;; tab-line-mode
   `(tab-line ((,class :background "#323232" :height 0.95)))
   `(tab-line-close-highlight ((,class :foreground "#ff8059") ))
   `(tab-line-highlight ((,class :background "#34cfff" :foreground "#323232")))
   `(tab-line-tab ((,class :inherit bold :background "#0e0e0e" :box (:line-width 2 :color "#0e0e0e"))))
   `(tab-line-tab-current ((,class :inherit tab-line-tab)))
   `(tab-line-tab-inactive ((,class :background "#424242" :foreground "#e0e6f0" :box (:line-width 2 :color "#424242"))))
   `(tab-line-tab-inactive-alternate ((,class :background "#595959" :foreground "#ffffff" :box (:line-width 2 :color "#595959"))))
   `(tab-line-tab-modified ((,class :foreground "#ff9fbf")))
;;;;; table (built-in table.el)
   `(table-cell ((,class :background "#0f0e39")))
;;;;; terraform-mode
   `(terraform--resource-name-face ((,class :foreground "#ef8b50")))
   `(terraform--resource-type-face ((,class :foreground "#79a8ff")))
;;;;; term
   `(term ((,class :background "#000000" :foreground "#ffffff")))
   `(term-bold ((,class :inherit bold)))
   `(term-color-black ((,class :background "gray35" :foreground "gray35")))
   `(term-color-blue ((,class :background "#2fafff" :foreground "#2fafff")))
   `(term-color-cyan ((,class :background "#00d3d0" :foreground "#00d3d0")))
   `(term-color-green ((,class :background "#44bc44" :foreground "#44bc44")))
   `(term-color-magenta ((,class :background "#feacd0" :foreground "#feacd0")))
   `(term-color-red ((,class :background "#ff8059" :foreground "#ff8059") ))
   `(term-color-white ((,class :background "gray65" :foreground "gray65")))
   `(term-color-yellow ((,class :background "#d0bc00" :foreground "#d0bc00")))
   `(term-underline ((,class :underline t)))
;;;;; textsec
   `(textsec-suspicious (()))
;;;;; transient
   `(transient-active-infix ((,class :background "#00322e" :foreground "#bfebe0")))
   `(transient-amaranth ((,class :inherit bold :foreground "#c0c530")))
   ;; From modus-themes:
   ;; Placate the compiler for what is a spurious warning.  We also
   ;; have to do this with `eldoc-highlight-function-argument'.
   (list 'transient-argument `((,class :inherit bold :background "#041529" :foreground "#00d3d0")))
   `(transient-blue ((,class :inherit bold :foreground "#2fafff")))
   `(transient-disabled-suffix ((,class :background "#a4202a" :foreground "#ffffff")))
   `(transient-enabled-suffix ((,class :background "#2f4a00" :foreground "#e0e6f0")))
   `(transient-heading ((,class :inherit bold :foreground "#ffffff")))
   `(transient-inactive-argument ((,class :inherit shadow)))
   `(transient-inactive-value ((,class :inherit shadow)))
   `(transient-key ((,class :inherit bold :foreground "#00bcff")))
   `(transient-mismatched-key ((,class :underline t)))
   `(transient-nonstandard-key ((,class :underline t)))
   `(transient-pink ((,class :inherit bold :foreground "#ef9fe4")))
   `(transient-purple ((,class :inherit bold :foreground "#b6a0ff")))
   `(transient-red ((,class :inherit bold :foreground "#ffa0a0")))
   `(transient-teal ((,class :inherit bold :foreground "#6ae4b9")))
   `(transient-unreachable ((,class :inherit shadow)))
   `(transient-unreachable-key ((,class :inherit shadow)))
   `(transient-value ((,class :inherit bold :background "#221000" :foreground "#d3b55f")))
;;;;; tree-sitter
   `(tree-sitter-hl-face:attribute ((,class :inherit font-lock-variable-name-face)))
   `(tree-sitter-hl-face:constant.builtin ((,class :inherit tree-sitter-hl-face:constant)))
   `(tree-sitter-hl-face:escape ((,class :inherit font-lock-regexp-grouping-backslash)))
   `(tree-sitter-hl-face:function ((,class :inherit font-lock-function-name-face)))
   `(tree-sitter-hl-face:function.call ((,class :inherit tree-sitter-hl-face:function)))
   `(tree-sitter-hl-face:label (( )))
   `(tree-sitter-hl-face:method.call (( )))
   `(tree-sitter-hl-face:operator ((,class :inherit bold)))
   `(tree-sitter-hl-face:property (( )))
   `(tree-sitter-hl-face:property.definition ((,class :inherit font-lock-variable-name-face)))
   `(tree-sitter-hl-face:punctuation (( )))
   `(tree-sitter-hl-face:punctuation.bracket (( )))
   `(tree-sitter-hl-face:punctuation.delimiter (( )))
   `(tree-sitter-hl-face:punctuation.special ((,class :inherit font-lock-regexp-grouping-construct)))
   `(tree-sitter-hl-face:string.special ((,class :inherit tree-sitter-hl-face:string)))
   `(tree-sitter-hl-face:tag ((,class :inherit font-lock-function-name-face)))
   `(tree-sitter-hl-face:type.argument (( )))
;;;;; treemacs
   `(treemacs-directory-collapsed-face ((,class :foreground "#f78fe7")))
   `(treemacs-directory-face ((,class :inherit dired-directory)))
   `(treemacs-file-face ((,class :foreground "#ffffff")))
   `(treemacs-fringe-indicator-face ((,class :foreground "#ffffff")))
   `(treemacs-git-added-face ((,class :inherit success)))
   `(treemacs-git-conflict-face ((,class :inherit error)))
   `(treemacs-git-ignored-face ((,class :inherit shadow)))
   `(treemacs-git-modified-face ((,class :inherit warning)))
   `(treemacs-git-renamed-face ((,class :inherit italic)))
   `(treemacs-git-unmodified-face ((,class :foreground "#ffffff")))
   `(treemacs-git-untracked-face ((,class :inherit shadow)))
   `(treemacs-help-column-face ((,class :inherit bold :foreground "#b6a0ff" :underline t)))
   `(treemacs-help-title-face ((,class :foreground "#00bcff")))
   `(treemacs-on-failure-pulse-face ((,class :background "#a4202a" :foreground "#ffffff")))
   `(treemacs-on-success-pulse-face ((,class :background "#006800" :foreground "#ffffff")))
   `(treemacs-root-face ((,class :inherit bold :foreground "#00bcff" :height 1.2 :underline t)))
   `(treemacs-root-remote-disconnected-face ((,class :inherit treemacs-root-remote-face :foreground "#d0bc00")))
   `(treemacs-root-remote-face ((,class :inherit treemacs-root-face :foreground "#feacd0")))
   `(treemacs-root-remote-unreadable-face ((,class :inherit treemacs-root-unreadable-face)))
   `(treemacs-root-unreadable-face ((,class :inherit treemacs-root-face :strike-through t)))
   `(treemacs-tags-face ((,class :foreground "#79a8ff")))
;;;;; tty-menu
   `(tty-menu-disabled-face ((,class :background "#191a1b" :foreground "#a8a8a8")))
   `(tty-menu-enabled-face ((,class :inherit bold :background "#191a1b" :foreground "#ffffff")))
   `(tty-menu-selected-face ((,class :background "#2a40b8" :foreground "#ffffff")))
;;;;; tuareg
   `(caml-types-def-face ((,class :background "#762422" :foreground "#e0e6f0")))
   `(caml-types-expr-face ((,class :background "#2f4a00" :foreground "#e0e6f0")))
   `(caml-types-occ-face ((,class :background "#2f4a00" :foreground "#e0e6f0")))
   `(caml-types-scope-face ((,class :background "#10387c" :foreground "#e0e6f0")))
   `(caml-types-typed-face ((,class :background "#49366e" :foreground "#e0e6f0")))
   `(tuareg-font-double-semicolon-face ((,class :inherit font-lock-preprocessor-face)))
   `(tuareg-font-lock-attribute-face ((,class :inherit font-lock-function-name-face)))
   `(tuareg-font-lock-constructor-face ((,class :foreground "#ffffff")))
   `(tuareg-font-lock-error-face ((,class :inherit bold :background "#a4202a" :foreground "#ffffff")))
   `(tuareg-font-lock-extension-node-face ((,class :background "#191a1b" :foreground "#feacd0")))
   `(tuareg-font-lock-governing-face ((,class :inherit bold :foreground "#ffffff")))
   `(tuareg-font-lock-infix-extension-node-face ((,class :inherit font-lock-function-name-face)))
   `(tuareg-font-lock-interactive-directive-face ((,class :foreground "#c6eaff")))
   `(tuareg-font-lock-interactive-error-face ((,class :inherit error)))
   `(tuareg-font-lock-interactive-output-face ((,class :inherit font-lock-constant-face)))
   `(tuareg-font-lock-label-face ((,class :inherit font-lock-type-face)))
   `(tuareg-font-lock-line-number-face ((,class :foreground "#f8dec0")))
   `(tuareg-font-lock-module-face ((,class :inherit font-lock-builtin-face)))
   `(tuareg-font-lock-multistage-face ((,class :inherit bold :background "#191a1b" :foreground "#2fafff")))
   `(tuareg-font-lock-operator-face ((,class :inherit font-lock-preprocessor-face)))
   `(tuareg-opam-error-face ((,class :inherit error)))
   `(tuareg-opam-pkg-variable-name-face ((,class :inherit font-lock-variable-name-face)))
;;;;; typescript
   `(typescript-jsdoc-tag ((,class :inherit (font-lock-builtin-face font-lock-comment-face) :weight normal)))
   `(typescript-jsdoc-type ((,class :inherit (font-lock-type-face font-lock-comment-face) :weight normal)))
   `(typescript-jsdoc-value ((,class :inherit (font-lock-constant-face font-lock-comment-face) :weight normal)))
;;;;; undo-tree
   `(undo-tree-visualizer-active-branch-face ((,class :inherit bold :foreground "#ffffff")))
   `(undo-tree-visualizer-current-face ((,class :foreground "#4fafff")))
   `(undo-tree-visualizer-default-face ((,class :inherit shadow)))
   `(undo-tree-visualizer-register-face ((,class :foreground "#ff62d4")))
   `(undo-tree-visualizer-unmodified-face ((,class :foreground "#4fe42f")))
;;;;; vc (vc-dir.el, vc-hooks.el)
   `(vc-dir-directory ((,class :foreground "#2fafff")))
   `(vc-dir-file ((,class :foreground "#ffffff")))
   `(vc-dir-header ((,class :foreground "#6ae4b9")))
   `(vc-dir-header-value ((,class :foreground "#b6a0ff")))
   `(vc-dir-mark-indicator ((,class :foreground "#00bcff")))
   `(vc-dir-status-edited ((,class :foreground "#d0bc00")))
   `(vc-dir-status-ignored ((,class :inherit shadow)))
   `(vc-dir-status-up-to-date ((,class :foreground "#00d3d0")))
   `(vc-dir-status-warning ((,class :inherit error)))
   `(vc-conflict-state ((,class :inherit bold :foreground "#ffa7ba")))
   `(vc-edited-state ((,class :foreground "gold3")))
   `(vc-locally-added-state ((,class :foreground "#00d8b4")))
   `(vc-locked-state ((,class :foreground "#34cfff")))
   `(vc-missing-state ((,class :inherit italic :foreground "#d5b1ff")))
   `(vc-needs-update-state ((,class :inherit italic :foreground "#c6eaff")))
   `(vc-removed-state ((,class :foreground "#ffa7ba")))
   `(vc-state-base ((,class :foreground "#f4f4f4")))
   `(vc-up-to-date-state ((,class :foreground "#70d73f")))
;;;;; vertico
   `(vertico-current ((,class :inherit bold :background "#323232" :extend t)))
;;;;; vertico-quick
   `(vertico-quick1 ((,class :inherit bold :background "#0050af")))
   `(vertico-quick2 ((,class :inherit bold :background "#7f1f7f")))
;;;;; vterm
   `(vterm-color-black ((,class :background "gray35" :foreground "gray35")))
   `(vterm-color-blue ((,class :background "#2fafff" :foreground "#2fafff")))
   `(vterm-color-cyan ((,class :background "#00d3d0" :foreground "#00d3d0")))
   `(vterm-color-default ((,class :background "#000000" :foreground "#ffffff")))
   `(vterm-color-green ((,class :background "#44bc44" :foreground "#44bc44")))
   `(vterm-color-inverse-video ((,class :background "#000000" :inverse-video t)))
   `(vterm-color-magenta ((,class :background "#feacd0" :foreground "#feacd0")))
   `(vterm-color-red ((,class :background "#ff8059" :foreground "#ff8059") ))
   `(vterm-color-underline ((,class :foreground "#f8dec0" :underline t)))
   `(vterm-color-white ((,class :background "gray65" :foreground "gray65")))
   `(vterm-color-yellow ((,class :background "#d0bc00" :foreground "#d0bc00")))
;;;;; vundo
   `(vundo-highlight ((,class :inherit (bold vundo-node) :foreground "red")))
;;;;; web-mode
   `(web-mode-annotation-face ((,class :inherit web-mode-comment-face)))
   `(web-mode-annotation-html-face ((,class :inherit web-mode-comment-face)))
   `(web-mode-annotation-tag-face ((,class :inherit web-mode-comment-face :underline t)))
   `(web-mode-block-attr-name-face ((,class :inherit font-lock-constant-face)))
   `(web-mode-block-attr-value-face ((,class :inherit font-lock-type-face)))
   `(web-mode-block-comment-face ((,class :inherit web-mode-comment-face)))
   `(web-mode-block-control-face ((,class :inherit font-lock-builtin-face)))
   `(web-mode-block-delimiter-face ((,class :foreground "#ffffff")))
   `(web-mode-block-face ((,class :background "#100f10")))
   `(web-mode-block-string-face ((,class :inherit web-mode-string-face)))
   `(web-mode-bold-face ((,class :inherit bold)))
   `(web-mode-builtin-face ((,class :inherit font-lock-builtin-face)))
   `(web-mode-comment-face ((,class :inherit font-lock-comment-face)))
   `(web-mode-comment-keyword-face ((,class :inherit font-lock-warning-face)))
   `(web-mode-constant-face ((,class :inherit font-lock-constant-face)))
   `(web-mode-css-at-rule-face ((,class :inherit font-lock-constant-face)))
   `(web-mode-css-color-face ((,class :inherit font-lock-builtin-face)))
   `(web-mode-css-comment-face ((,class :inherit web-mode-comment-face)))
   `(web-mode-css-function-face ((,class :inherit font-lock-builtin-face)))
   `(web-mode-css-priority-face ((,class :inherit font-lock-warning-face)))
   `(web-mode-css-property-name-face ((,class :inherit font-lock-keyword-face)))
   `(web-mode-css-pseudo-class-face ((,class :inherit font-lock-doc-face)))
   `(web-mode-css-selector-face ((,class :inherit font-lock-keyword-face)))
   `(web-mode-css-string-face ((,class :inherit web-mode-string-face)))
   `(web-mode-css-variable-face ((,class :foreground "#f8dec0")))
   `(web-mode-current-column-highlight-face ((,class :background "#191a1b")))
   `(web-mode-current-element-highlight-face ((,class :background "#00322e" :foreground "#bfebe0")))
   `(web-mode-doctype-face ((,class :inherit italic :foreground "#c6eaff")))
   `(web-mode-error-face ((,class :background "#a4202a" :foreground "#ffffff")))
   `(web-mode-filter-face ((,class :inherit font-lock-function-name-face)))
   `(web-mode-folded-face ((,class :underline t)))
   `(web-mode-function-call-face ((,class :inherit font-lock-function-name-face)))
   `(web-mode-function-name-face ((,class :inherit font-lock-function-name-face)))
   `(web-mode-html-attr-custom-face ((,class :inherit font-lock-variable-name-face)))
   `(web-mode-html-attr-engine-face ((,class :foreground "#ffffff")))
   `(web-mode-html-attr-equal-face ((,class :foreground "#ffffff")))
   `(web-mode-html-attr-name-face ((,class :inherit font-lock-variable-name-face)))
   `(web-mode-html-attr-value-face ((,class :inherit font-lock-constant-face)))
   `(web-mode-html-entity-face ((,class :inherit font-lock-negation-char-face)))
   `(web-mode-html-tag-bracket-face ((,class :foreground "#e0e6f0")))
   `(web-mode-html-tag-custom-face ((,class :inherit font-lock-function-name-face)))
   `(web-mode-html-tag-face ((,class :inherit font-lock-function-name-face)))
   `(web-mode-html-tag-namespaced-face ((,class :inherit font-lock-builtin-face)))
   `(web-mode-html-tag-unclosed-face ((,class :inherit error :underline t)))
   `(web-mode-inlay-face ((,class :background "#191a1b")))
   `(web-mode-italic-face ((,class :inherit italic)))
   `(web-mode-javascript-comment-face ((,class :inherit web-mode-comment-face)))
   `(web-mode-javascript-string-face ((,class :inherit web-mode-string-face)))
   `(web-mode-json-comment-face ((,class :inherit web-mode-comment-face)))
   `(web-mode-json-context-face ((,class :inherit font-lock-builtin-face)))
   `(web-mode-json-key-face ((,class :foreground "#bfd9ff")))
   `(web-mode-json-string-face ((,class :inherit web-mode-string-face)))
   `(web-mode-jsx-depth-1-face ((,class :background "#2a40b8" :foreground "#ffffff")))
   `(web-mode-jsx-depth-2-face ((,class :background "#10387c" :foreground "#ffffff")))
   `(web-mode-jsx-depth-3-face ((,class :background "#203448" :foreground "#c6eaff")))
   `(web-mode-jsx-depth-4-face ((,class :background "#191a1b" :foreground "#8ecfff")))
   `(web-mode-jsx-depth-5-face ((,class :background "#191a1b" :foreground "#bfd9ff")))
   `(web-mode-keyword-face ((,class :inherit font-lock-keyword-face)))
   `(web-mode-param-name-face ((,class :inherit font-lock-function-name-face)))
   `(web-mode-part-comment-face ((,class :inherit web-mode-comment-face)))
   `(web-mode-part-face ((,class :inherit web-mode-block-face)))
   `(web-mode-part-string-face ((,class :inherit web-mode-string-face)))
   `(web-mode-preprocessor-face ((,class :inherit font-lock-preprocessor-face)))
   `(web-mode-script-face ((,class :inherit web-mode-part-face)))
   `(web-mode-sql-keyword-face ((,class :inherit font-lock-negation-char-face)))
   `(web-mode-string-face ((,class :inherit font-lock-string-face)))
   `(web-mode-style-face ((,class :inherit web-mode-part-face)))
   `(web-mode-symbol-face ((,class :inherit font-lock-constant-face)))
   `(web-mode-type-face ((,class :inherit font-lock-builtin-face)))
   `(web-mode-underline-face ((,class :underline t)))
   `(web-mode-variable-name-face ((,class :inherit font-lock-variable-name-face)))
   `(web-mode-warning-face ((,class :inherit font-lock-warning-face)))
   `(web-mode-whitespace-face ((,class :background "#101424" :foreground "#aa9e9f")))
;;;;; wgrep
   `(wgrep-delete-face ((,class :inherit warning)))
   `(wgrep-done-face ((,class :inherit success)))
   `(wgrep-face ((,class :inherit bold)))
   `(wgrep-file-face ((,class :foreground "#f8dec0")))
   `(wgrep-reject-face ((,class :inherit error)))
;;;;; which-function-mode
   `(which-func ((,class :foreground "#d5b1ff")))
;;;;; which-key
   `(which-key-command-description-face ((,class :foreground "#ffffff")))
   `(which-key-group-description-face ((,class :foreground "#f78fe7")))
   `(which-key-highlighted-command-face ((,class :foreground "#d0bc00" :underline t)))
   `(which-key-key-face ((,class :inherit bold :foreground "#00bcff")))
   `(which-key-local-map-description-face ((,class :foreground "#ffffff")))
   `(which-key-note-face ((,class :foreground "#f8dec0")))
   `(which-key-separator-face ((,class :inherit shadow)))
   `(which-key-special-key-face ((,class :inherit bold :foreground "#ef8b50")))
;;;;; whitespace-mode
   `(whitespace-big-indent ((,class :background "#762422" :foreground "#e0e6f0")))
   `(whitespace-empty ((,class :background "gray10" :foreground "#ffffff" :extend t)))
   `(whitespace-hspace ((,class :background "#101424" :foreground "#aa9e9f")))
   `(whitespace-indentation ((,class :background "#101424" :foreground "#aa9e9f")))
   `(whitespace-line ((,class :background "#604200" :foreground "#e0e6f0")))
   `(whitespace-newline ((,class :background "#101424" :foreground "#aa9e9f")))
   `(whitespace-space ((,class :background "#101424" :foreground "#aa9e9f")))
   `(whitespace-space-after-tab ((,class :background "#49366e" :foreground "#e0e6f0")))
   `(whitespace-space-before-tab ((,class :background "#00415e" :foreground "#e0e6f0")))
   `(whitespace-tab ((,class :background "#101424" :foreground "#aa9e9f")))
   `(whitespace-trailing ((,class :background "#a4202a" :foreground "#ffffff")))
;;;;; window-divider-mode
   `(window-divider ((,class :foreground "#646464")))
   `(window-divider-first-pixel ((,class :foreground "#969696")))
   `(window-divider-last-pixel ((,class :foreground "#969696")))
;;;;; writegood-mode
   `(writegood-duplicates-face ((,class :background "#191a1b" :foreground "#ef8b50" :underline t)))
   `(writegood-passive-voice-face ((,class :foreground "#b0aa00" :underline (:color "#d0de00" :style wave))))
   `(writegood-weasels-face ((,class :foreground "#ef8690" :underline (:color "#ff4a6f" :style wave))))
;;;;; woman
   `(woman-addition ((,class :foreground "#b6a0ff")))
   `(woman-bold ((,class :inherit bold :foreground "#f78fe7")))
   `(woman-italic ((,class :inherit italic :foreground "#00d3d0")))
   `(woman-unknown ((,class :foreground "#70b900")))
;;;;; xah-elisp-mode
   `(xah-elisp-at-symbol ((,class :inherit font-lock-warning-face)))
   `(xah-elisp-cap-variable ((,class :inherit font-lock-preprocessor-face)))
   `(xah-elisp-command-face ((,class :inherit font-lock-type-face)))
   `(xah-elisp-dollar-symbol ((,class :inherit font-lock-variable-name-face)))
;;;;; xref
   `(xref-file-header ((,class :inherit bold :foreground "#c6eaff")))
   `(xref-line-number ((,class :inherit shadow)))
   `(xref-match ((,class :inherit match)))
;;;;; yaml-mode
   `(yaml-tab-face ((,class :background "#a4202a" :foreground "#ffffff")))
;;;;; yasnippet
   `(yas-field-highlight-face ((,class :background "#282e46")))))

(custom-theme-set-variables
 'non-modo
;;;; ansi-colors
 `(ansi-color-faces-vector [default bold shadow italic underline success warning error])
 `(ansi-color-names-vector ["gray35" "#ff8059" "#44bc44" "#d0bc00" "#2fafff" "#feacd0" "#00d3d0" "gray65"])
 `(chart-face-color-list '("#b52c2c" "#4fd100" "#f1e00a" "#2fafef" "#bf94fe" "#47dfea" "#702020" "#007800" "#b08600" "#1f2f8f" "#5f509f" "#00808f"))
;;;; highlight-changes
 `(highlight-changes-colors nil)
 `(highlight-changes-face-list '(success warning error bold bold-italic))
;;;; ibuffer
 `(ibuffer-deletion-face '(:inherit bold :background "#5a0000" :foreground "#ff99aa"))
 `(ibuffer-filter-group-name-face '(:inherit bold :foreground "#ffffff"))
 `(ibuffer-marked-face '(:inherit bold :background "#002f2f" :foreground "#60cfa2"))
 `(ibuffer-title-face 'default)
;;;; wid-edit
 `(widget-link-prefix "[")
 `(widget-link-suffix "]")
 `(widget-mouse-face '(highlight widget-button))
 `(widget-push-button-prefix "[")
 `(widget-push-button-suffix "]")
;;;; xterm-color
 `(xterm-color-names ["black" "#ff8059" "#44bc44" "#d0bc00" "#2fafff" "#feacd0" "#00d3d0" "gray65"])
 `(xterm-color-names-bright ["gray35" "#ef8b50" "#70b900" "#c0c530" "#79a8ff" "#f78fe7" "#4ae2f0" "white"]))

(defun use-alt-font-lock-keyword-face ()
  "Remap `font-lock-keyword-face' to the alternate one, in the current buffer."
  (face-remap-add-relative 'font-lock-keyword-face 'alt-font-lock-keyword-face))
(defun use-alt-hl-line-face ()
  "Remap `hl-line' face to the alternate one, in the current buffer."
  (face-remap-add-relative 'hl-line 'alt-hl-line-face))

(provide-theme 'non-modo)
;;; non-modo-theme.el ends here
